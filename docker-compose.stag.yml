version: "3.3"
volumes:
  prometheus_data:
  grafana_data:
  portainer_data:

services:
  placio-proxy:
    image: traefik:latest
    ports:
      - "80:80"
      - "8090:8080"
      - "443:443"
    env_file:
      - .envs/.stag

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/traefik/traefik.yml:/traefik.yml
      - /opt/traefik/acme.json:/acme.json
      - /opt/traefik/configurations:/configurations
    command:
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.palnight.com`)"
      # - 'traefik.http.routers.traefik-secure.middlewares=user-auth@file'
      - "traefik.http.routers.traefik-secure.service=api@internal"

  askai:
    ports:
      - "8282:8282"
    environment:
      - PORT=8282
    env_file:
      - /home/placio/.env
    restart: always
    build:
      context: ./askai
      dockerfile: ./Dockerfile
    networks:
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.askai-secure.entrypoints=websecure"
      - "traefik.http.routers.askai-secure.rule=Host(`askai.palnight.com`)"
      - "traefik.http.routers.askai-secure.service=askai"
      - "traefik.http.services.askai.loadbalancer.server.port=8282"

  placio-backend:
    ports:
      - "7070:7070"
      - "50051:50051"
    env_file:
      - .envs/.stag
    restart: always
    build:
      context: .
      dockerfile: ./app/stag.dockerfile
    networks:
      - default
    volumes:
      - ./app/domains/media/serviceAccount.json:/app/serviceAccount.json
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.backend-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-secure.rule=Host(`api.palnight.com`)"
      - "traefik.http.routers.backend-secure.middlewares=cors"
      - "traefik.http.routers.backend-secure.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=7070"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS,PATCH"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://placio.io,http://localhost:3000,https://www.placio.io, https://control.placio.io"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Content-Type,Authorization"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"

  placio-realtime:
    ports:
      - "7080:7080"
    env_file:
      - .envs/.stag
    restart: always
    build:
      context: .
      dockerfile: ./realtime_server/stag.dockerfile
    networks:
      - default
    depends_on:
      - placio-backend
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.realtime-secure.entrypoints=websecure"
      - "traefik.http.routers.realtime-secure.rule=Host(`feeds.palnight.com`)"
      - "traefik.http.routers.realtime-secure.service=realtime"
      - "traefik.http.services.realtime.loadbalancer.server.port=7080"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prod.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.palnight.com`)"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.palnight.com`)"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.palnight.com`)"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: "918273645dozie"
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - default

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  africa_insight:
    build:
      context: ./africa_insight
      dockerfile: ./docker/Dockerfile
      args:
        DB_CONNECTION: "postgresql://postgres:918273645dozie@db:5432/postgres"
        MODE: "TEST"
    entrypoint: >
      sh -c "sleep 5 && python main.py"
    volumes:
      - ../:/app/
    environment:
      - PYTHONPATH=/app/africa_insight
    ports:
      - "8383:8383"
    healthcheck:
      test: ["CMD", "curl", "-f", "https://gpt.palnight.com/api/v1/version"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - default
    links:
      - "db:db"
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.africa_insight-secure.entrypoints=websecure"
      - "traefik.http.routers.africa_insight-secure.rule=Host(`gpt.palnight.com`)"
      - "traefik.http.routers.africa_insight-secure.service=africa_insight"
      - "traefik.http.services.africa_insight.loadbalancer.server.port=8383"

networks:
  default:
    external:
      name: traefik-public
