version: "3.3"
volumes:
  db_data:
  pgadmin_data:
  redis_data:
  db_data2:
  prometheus_data:
  grafana_data:

services:
  placio-proxy:
    image: traefik:latest
    ports:
      - "80:80"
      - "8090:8080"
      - "443:443"
    env_file:
      - ./.envs/.stag

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/traefik/traefik.yml:/traefik.yml
      - /opt/traefik/acme.json:/acme.json
      - /opt/traefik/configurations:/configurations
    command:
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=default"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.palnight.com`)"
      # - 'traefik.http.routers.traefik-secure.middlewares=user-auth@file'
      - "traefik.http.routers.traefik-secure.service=api@internal"

  db:
    image: postgres:14
    container_name: postgres-db
    volumes:
      - db_data:/var/lib/postgresql/pg-data/pgdata
    env_file:
      - ./.envs/.stag
    networks:
      - default
    #    restart: always
    ports:
      - "5432:5432"

  placio-backend:
    ports:
      - "7070:7070"
    env_file:
      - ./.envs/.stag
    restart: always
    volumes:
      - ./:/app
      - ./cmd/app:/app/cmd/app
      - ./config:/app/config
    build:
      context: .
      dockerfile: ./cmd/app/stag.dockerfile
    networks:
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.backend-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-secure.rule=Host(`api.palnight.com`)"
      - "traefik.http.routers.backend-secure.service=backend"
      # - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=*"
      # - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      # - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      # - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      # - "traefik.http.routers.backend-secure.middlewares=cors"
      - traefik.http.services.backend.loadbalancer.server.port=7070

  docs:
    container_name: placio-docs
    build:
      context: .
      dockerfile: ./docs/Dockerfile
    restart: always
    ports:
      - "6060:6060"
    volumes:
      # - ./:/app
      - ./docs:/app/docs

    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.docs-secure.entrypoints=websecure"
      - "traefik.http.routers.docs-secure.rule=Host(`docs.palnight.com`)"
      - "traefik.http.routers.docs-secure.service=docs"
      - traefik.http.services.docs.loadbalancer.server.port=6060
      # add path prefix strip

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prod.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.palnight.com`)"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.palnight.com`)"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.cadvisor-secure.entrypoints=websecure"
      - "traefik.http.routers.cadvisor-secure.rule=Host(`cadvisor.palnight.com`)"
      - "traefik.http.routers.cadvisor-secure.service=cadvisor"
      - traefik.http.services.cadvisor.loadbalancer.server.port=8080

  pg_exporter:
    image: wrouesnel/postgres_exporter:latest
    environment:
      DATA_SOURCE_NAME: postgresql://dozie:918273645dozie@db:5432/placio?sslmode=disable
    command: "-extend.query-path=/custom-queries.yaml"
    volumes:
      - ./prometheus/db-queries:/custom-queries.yaml
    ports:
      - "9187:9187"
    labels:
      - traefik.enable=true
      - traefik.docker.network=default
      - "traefik.http.routers.pgexporter-secure.entrypoints=websecure"
      - "traefik.http.routers.pgexporter-secure.rule=Host(`pgexporter.palnight.com`)"
      - "traefik.http.routers.pgexporter-secure.service=pgexporter"
      - traefik.http.services.pgexporter.loadbalancer.server.port=9187


networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
