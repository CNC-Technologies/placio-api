openapi: 3.0.1
info:
  title: Placio Application Api
  description: This is the documentation for the Placio Application Api
  termsOfService: https://placio.io/terms
  contact:
    name: Placio Ltd
    url: https://placio.io
    email: support@placio.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "0.01"
servers:
  - url: http://https://api.palnight.com/api/v1
  - url: https://https://api.palnight.com/api/v1
paths:
  /api/v1/amenities:
    get:
      tags:
        - Amenity
      summary: Get all amenities
      description: Get all amenities
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved amenities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Amenity'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    post:
      tags:
        - Amenity
      summary: Create a new amenity
      description: Create a new amenity with provided information
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - icons
              properties:
                icons:
                  type: string
                  description: Icon files for amenity
                  format: binary
        required: true
      responses:
        200:
          description: Successfully created amenity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Amenity'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: amenity
  /api/v1/amenities/{id}:
    get:
      tags:
        - Amenity
      summary: Get an amenity
      description: Get an amenity by ID
      parameters:
        - name: id
          in: path
          description: ID of the amenity
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved amenity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Amenity'
        404:
          description: Amenity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    put:
      tags:
        - Amenity
      summary: Update an amenity
      description: Update an amenity by ID
      parameters:
        - name: id
          in: path
          description: ID of the amenity to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - icon
              properties:
                icon:
                  type: string
                  description: New icon file for amenity
                  format: binary
        required: true
      responses:
        200:
          description: Successfully updated amenity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Amenity'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Amenity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: amenity
    delete:
      tags:
        - Amenity
      summary: Delete an amenity
      description: Delete an amenity by ID
      parameters:
        - name: id
          in: path
          description: ID of the amenity to delete
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted amenity
          content:
            application/json:
              schema:
                type: string
        404:
          description: Amenity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/attendees/:
    post:
      tags:
        - Attendee
      summary: Add attendee to an event
      description: Add an attendee to the specified event
      requestBody:
        description: Attendee Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.Attendee'
        required: true
      responses:
        201:
          description: Successfully added attendee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.Attendee'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: AddAttendeeDto
  /api/v1/attendees/{id}:
    get:
      tags:
        - Attendee
      summary: Get attendee by ID
      description: Get attendee details by their ID
      parameters:
        - name: id
          in: path
          description: Attendee ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved attendee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.Attendee'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Attendee Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    put:
      tags:
        - Attendee
      summary: Update attendee details
      description: Update an attendee's details by their ID
      parameters:
        - name: id
          in: path
          description: Attendee ID
          required: true
          schema:
            type: string
      requestBody:
        description: Attendee Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.Attendee'
        required: true
      responses:
        200:
          description: Successfully updated attendee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.Attendee'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Attendee Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: UpdateAttendeeDto
    delete:
      tags:
        - Attendee
      summary: Remove attendee from an event
      description: Remove an attendee from the specified event by their ID
      parameters:
        - name: id
          in: path
          description: Attendee ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully removed attendee
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Attendee Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/bookings/:
    post:
      tags:
        - Booking
      summary: Create a booking
      description: Create a new booking
      requestBody:
        description: Booking data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully created booking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Booking'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: booking
  /api/v1/bookings/{id}:
    get:
      tags:
        - Booking
      summary: Get a booking
      description: Get a booking by its ID
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved booking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Booking'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      tags:
        - Booking
      summary: Delete a booking
      description: Delete a booking by its ID
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted booking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gin.H'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      tags:
        - Booking
      summary: Update a booking
      description: Update a booking by its ID
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
      requestBody:
        description: Booking data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully updated booking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Booking'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: booking
  /api/v1/business/:
    patch:
      tags:
        - Business
      summary: Update a business's details
      description: Get a business's details by ID
      parameters:
        - name: id
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/comments/:postId:
    post:
      responses:
        201:
          description: Successfully created comment
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.CommentResponseDto'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/comments/{id}:
    put:
      responses:
        200:
          description: Successfully updated comment
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.CommentResponseDto'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Comment Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      responses:
        204:
          description: Successfully deleted comment
          content: {}
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Comment Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/events/{eventId}/attendees:
    get:
      tags:
        - Attendee
      summary: Get attendees by event
      description: Get all attendees for a specific event by event ID
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved attendees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_models.Attendee'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/events/{eventId}/ticket-options:
    get:
      tags:
        - TicketOption
      summary: GET ticket options by event ID
      description: GET all ticket options for an event by its ID
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved ticket options for event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_models.TicketOption'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/health:
    get:
      tags:
        - root
      summary: Show the status of server.
      description: get the status of server.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/v1/helps:
    post:
      tags:
        - Help
      summary: Create a help request
      description: Create a new help request
      requestBody:
        description: Optional media associated with the help request
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: Successfully created help request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Help'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: media
  /api/v1/helps/{id}:
    delete:
      tags:
        - Help
      summary: Delete a help request
      description: Delete an existing help request
      parameters:
        - name: id
          in: path
          description: ID of the help request to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted help request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/helps/{id}/resolve:
    patch:
      tags:
        - Help
      summary: Resolve a help request
      description: Resolve an existing help request
      parameters:
        - name: id
          in: path
          description: ID of the help request to resolve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully resolved help request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Help'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/{likeID}:
    delete:
      tags:
        - Like
      summary: Unlike a post
      description: Remove a like from a post
      parameters:
        - name: likeID
          in: path
          description: ID of the like
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully unliked post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/place/{placeID}:
    get:
      tags:
        - Like
      summary: Get place likes
      description: Retrieve all likes for a place
      parameters:
        - name: placeID
          in: path
          description: ID of the place
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of UserLikePlace records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.UserLikePlace'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/place/{userID}/place/{placeID}:
    post:
      tags:
        - Like
      summary: Like a place
      description: Allows a user to like a specific place
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: placeID
          in: path
          description: ID of the place
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        201:
          description: Successfully liked place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.UserLikePlace'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/place/{userLikePlaceID}:
    delete:
      tags:
        - Like
      summary: Unlike a place
      description: Allows a user to unlike a specific place
      parameters:
        - name: userLikePlaceID
          in: path
          description: ID of the UserLikePlace record
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Provide JWT access token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully unliked place
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/post/{postID}:
    get:
      tags:
        - Like
      summary: Get post likes
      description: Retrieve all likes for a post
      parameters:
        - name: postID
          in: path
          description: ID of the post
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of likes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Like'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/user/{userID}:
    get:
      tags:
        - Like
      summary: Get user likes
      description: Retrieve all likes by a user
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of likes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Like'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/user/{userID}/post/{postID}:
    post:
      tags:
        - Like
      summary: Like a post
      description: Add a like to a post by a user
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: postID
          in: path
          description: ID of the post
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully liked post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/likes/user/place/{userID}:
    get:
      tags:
        - Like
      summary: Get user liked places
      description: Retrieve all places liked by a user
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of UserLikePlace records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.UserLikePlace'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/media/:
    post:
      tags:
        - Media
      summary: Upload media
      description: Upload a media file (image, gif, or video) for a post
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - postID
              properties:
                file:
                  type: string
                  description: Media file
                  format: binary
                postID:
                  type: string
                  description: Post ID
        required: true
      responses:
        201:
          description: Successfully uploaded media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Media'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/menus/:
    post:
      tags:
        - Menu
      summary: Create a menu
      description: Create a new menu
      requestBody:
        description: Menu data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully created menu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Menu'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: menu
  /api/v1/menus/{id}:
    get:
      tags:
        - Menu
      summary: Get a menu
      description: Get a menu by its ID
      parameters:
        - name: id
          in: path
          description: ID of the menu
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved menu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Menu'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      tags:
        - Menu
      summary: Delete a menu
      description: Delete a menu by its ID
      parameters:
        - name: id
          in: path
          description: ID of the menu
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted menu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gin.H'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      tags:
        - Menu
      summary: Update a menu
      description: Update a menu by its ID
      parameters:
        - name: id
          in: path
          description: ID of the menu
          required: true
          schema:
            type: string
      requestBody:
        description: Menu data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully updated menu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Menu'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: menu
  /api/v1/places/:
    post:
      tags:
        - Place
      summary: Create a place
      description: Create a new place
      parameters:
        - name: business_id
          in: query
          description: ID of the business to create the place for
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Place to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.CreatePlaceDTO'
        required: true
      responses:
        200:
          description: Successfully created place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: place
  /api/v1/places/{id}:
    get:
      tags:
        - Place
      summary: Get a place
      description: Get a place by ID
      parameters:
        - name: id
          in: path
          description: ID of the place to get
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      tags:
        - Place
      summary: Delete a place
      description: Delete a place by ID
      parameters:
        - name: id
          in: path
          description: ID of the place to delete
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      tags:
        - Place
      summary: Update a place
      description: Update a place by ID
      parameters:
        - name: id
          in: path
          description: ID of the place to update
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Place data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.UpdatePlaceDTO'
        required: true
      responses:
        200:
          description: Successfully updated place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: place
  /api/v1/places/{id}/amenities:
    post:
      tags:
        - Place
      summary: Add amenities to a place
      description: Add amenities to a place by ID
      parameters:
        - name: id
          in: path
          description: ID of the place to add amenities to
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Amenities to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.AmenityAdditionDTO'
        required: true
      responses:
        200:
          description: Successfully added amenities to place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: amenity
  /api/v1/places/all:
    get:
      tags:
        - Place
      summary: Get all places
      description: Get all places
      responses:
        200:
          description: Successfully retrieved all places
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/placio-app_ent.Place'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/posts/:
    post:
      tags:
        - Post
      summary: Create a new post
      description: Create a new post for the authenticated user
      requestBody:
        description: Post Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.PostDto'
        required: true
      responses:
        201:
          description: Successfully created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.PostResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: CreatePostDto
  /api/v1/posts/{id}:
    get:
      tags:
        - Post
      summary: Get a post
      description: Get a post by ID
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Post'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    put:
      tags:
        - Post
      summary: Update a post
      description: Update an existing post
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: string
      requestBody:
        description: Post Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.PostDto'
        required: true
      responses:
        200:
          description: Successfully updated post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.PostResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Post Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: UpdatePostDto
    delete:
      tags:
        - Post
      summary: Delete a post
      description: Delete an existing post
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted post
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Post Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/posts/{id}/comments:
    get:
      tags:
        - Post
      summary: Get comments by post
      description: Retrieve all comments for a given post
      parameters:
        - name: id
          in: path
          description: Post ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Comment'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Post Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/ratings:
    get:
      tags:
        - Rating
      summary: GET all ratings
      description: Retrieve all ratings
      parameters:
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved ratings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Rating'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/ratings/:
    post:
      tags:
        - Rating
      summary: Create a new rating
      description: Create a new rating for the specified event
      parameters:
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      requestBody:
        description: Rating Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.RatingDTO'
        required: true
      responses:
        201:
          description: Successfully created rating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Rating'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: Dto.RatingDTO
  /api/v1/ratings/{id}:
    get:
      tags:
        - Rating
      summary: GET rating by ID
      description: Retrieve a rating by its ID
      parameters:
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Rating ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved rating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Rating'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Rating Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    put:
      tags:
        - Rating
      summary: Update rating by ID
      description: Update a rating by its ID
      parameters:
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Rating ID
          required: true
          schema:
            type: string
      requestBody:
        description: New Score
        content:
          application/json:
            schema:
              type: integer
        required: true
      responses:
        200:
          description: Successfully updated rating
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Rating'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Rating Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: score
    delete:
      tags:
        - Rating
      summary: Delete rating by ID
      description: Delete a rating by its ID
      parameters:
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Rating ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully deleted rating
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Rating Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/reservations/:
    post:
      responses:
        200:
          description: Successfully created reservation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_ent.Reservation'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/reservations/{id}:
    get:
      responses:
        200:
          description: Successfully retrieved reservation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_ent.Reservation'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      responses:
        200:
          description: Successfully deleted reservation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_ent.Reservation'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      responses:
        200:
          description: Successfully updated reservation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_ent.Reservation'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/rooms/:
    post:
      tags:
        - Room
      summary: Create a room
      description: Create a new room
      requestBody:
        description: Room data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully created room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Room'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: room
  /api/v1/rooms/{id}:
    get:
      tags:
        - Room
      summary: Get a room
      description: Get a room by its ID
      parameters:
        - name: id
          in: path
          description: ID of the room
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Room'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      tags:
        - Room
      summary: Delete a room
      description: Delete a room by its ID
      parameters:
        - name: id
          in: path
          description: ID of the room
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gin.H'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      tags:
        - Room
      summary: Update a room
      description: Update a room by its ID
      parameters:
        - name: id
          in: path
          description: ID of the room
          required: true
          schema:
            type: string
      requestBody:
        description: Room data
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: Successfully updated room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Room'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: room
  /api/v1/search:
    get:
      tags:
        - Search
      summary: Full-text search
      description: Search for Users, Places, Events, and Businesses
      parameters:
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.SearchResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/search/businesses:
    get:
      tags:
        - Search
      summary: Search for Businesses
      description: Search for Businesses by a given search text
      parameters:
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/search/db:
    get:
      tags:
        - Search
      summary: Search DB
      description: Search for Users, Places, Events, and Businesses
      parameters:
        - name: type
          in: query
          description: Type of search - user, place, event, business
          schema:
            type: string
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.SearchResponses'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/search/events:
    get:
      tags:
        - Search
      summary: Search for Events
      description: Search for Events by a given search text
      parameters:
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/search/places:
    get:
      tags:
        - Search
      summary: Search for Places
      description: Search for Places by a given search text
      parameters:
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/search/users:
    get:
      tags:
        - Search
      summary: Search for Users
      description: Search for Users by a given search text
      parameters:
        - name: searchText
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully found search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/ticket-options/:
    post:
      tags:
        - TicketOption
      summary: Create a new ticket option
      description: Create a new ticket option for the specified event
      requestBody:
        description: Ticket Option Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.TicketOption'
        required: true
      responses:
        201:
          description: Successfully created ticket option
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.TicketOption'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: CreateTicketOptionDto
  /api/v1/ticket-options/{id}:
    get:
      tags:
        - TicketOption
      summary: GET ticket option by ID
      description: GET a ticket option by its ID
      parameters:
        - name: id
          in: path
          description: Ticket Option ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved ticket option
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.TicketOption'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Ticket Option Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    put:
      tags:
        - TicketOption
      summary: Update ticket option by ID
      description: Update a ticket option by its ID
      parameters:
        - name: id
          in: path
          description: Ticket Option ID
          required: true
          schema:
            type: string
      requestBody:
        description: Ticket Option Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.TicketOption'
        required: true
      responses:
        200:
          description: Successfully updated ticket option
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.TicketOption'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Ticket Option Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: UpdateTicketOptionDto
    delete:
      tags:
        - TicketOption
      summary: Delete ticket option by ID
      description: Delete a ticket option by its ID
      parameters:
        - name: id
          in: path
          description: Ticket Option ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully deleted ticket option
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Ticket Option Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/tickets/:
    post:
      tags:
        - Ticket
      summary: Create a new ticket
      description: Create a new ticket for the specified event
      requestBody:
        description: Ticket Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.Ticket'
        required: true
      responses:
        201:
          description: Successfully created ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.Ticket'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: CreateTicketDto
  /api/v1/tickets/{id}:
    get:
      tags:
        - Ticket
      summary: GET ticket by ID
      description: GET a ticket by its ID
      parameters:
        - name: id
          in: path
          description: Ticket ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.Ticket'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Ticket Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    delete:
      tags:
        - Ticket
      summary: Delete ticket by ID
      description: Delete a ticket by its ID
      parameters:
        - name: id
          in: path
          description: Ticket ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successfully deleted ticket
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        404:
          description: Ticket Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/tickets/event/{eventId}:
    get:
      tags:
        - Ticket
      summary: GET tickets by event ID
      description: GET all tickets for a specific event
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_models.Ticket'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/:
    get:
      tags:
        - User
      summary: Get a user's details
      description: Get a user's details by their Auth0 ID
      parameters:
        - name: id
          in: path
          description: User Auth0 ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    patch:
      tags:
        - User
      summary: Update a user's details
      description: Get a user's details by their Auth0 ID
      parameters:
        - name: id
          in: path
          description: User Auth0 ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{followerID}/follow/business/{businessID}:
    post:
      tags:
        - User
      summary: Follow a business
      description: Follow a business by its ID
      parameters:
        - name: followerID
          in: path
          description: ID of the follower
          required: true
          schema:
            type: string
        - name: businessID
          in: path
          description: ID of the business to follow
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully followed business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{followerID}/follow/user/{followedID}:
    post:
      tags:
        - User
      summary: Follow a user
      description: Follow a user by their ID
      parameters:
        - name: followerID
          in: path
          description: ID of the follower
          required: true
          schema:
            type: string
        - name: followedID
          in: path
          description: ID of the user to follow
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully followed user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{followerID}/unfollow/business/{businessID}:
    delete:
      tags:
        - User
      summary: Unfollow a business
      description: Unfollow a business by its ID
      parameters:
        - name: followerID
          in: path
          description: ID of the follower
          required: true
          schema:
            type: string
        - name: businessID
          in: path
          description: ID of the business to unfollow
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully unfollowed business
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{followerID}/unfollow/user/{followedID}:
    delete:
      tags:
        - User
      summary: Unfollow a user
      description: Unfollow a user by their ID
      parameters:
        - name: followerID
          in: path
          description: ID of the follower
          required: true
          schema:
            type: string
        - name: followedID
          in: path
          description: ID of the user to unfollow
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully unfollowed user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{id}/appdata:
    patch:
      tags:
        - User
      summary: Update a user's app metadata
      description: Update a user's app metadata by their Auth0 ID
      parameters:
        - name: id
          in: path
          description: User Auth0 ID
          required: true
          schema:
            type: string
      requestBody:
        description: App metadata to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.AppMetadata'
        required: true
      responses:
        200:
          description: Successfully updated app metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: appData
  /api/v1/users/{id}/business-accounts:
    get:
      tags:
        - User
      summary: Get all business accounts for a user
      description: Get all business accounts associated with a specific user
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved business accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{id}/metadata:
    patch:
      tags:
        - User
      summary: Update a user's metadata
      description: Update a user's metadata by their Auth0 ID
      parameters:
        - name: id
          in: path
          description: User Auth0 ID
          required: true
          schema:
            type: string
      requestBody:
        description: User metadata to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.Metadata'
        required: true
      responses:
        200:
          description: Successfully updated user metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_models.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: userMetaData
  /api/v1/users/{id}/userinfo:
    patch:
      tags:
        - User
      summary: Update a user's information
      description: Update a user's information by their Auth0 ID
      parameters:
        - name: id
          in: path
          description: User Auth0 ID
          required: true
          schema:
            type: string
      requestBody:
        description: User data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_models.Auth0UserData'
        required: true
      responses:
        200:
          description: Successfully updated user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: userData
  /api/v1/users/{userID}/business-account/{businessAccountID}/association:
    post:
      tags:
        - User
      summary: Associate a user with a business account
      description: Associate a user with a specific business account
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Role
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        204:
          description: Successfully associated user with business account
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: role
    delete:
      tags:
        - User
      summary: Remove a user's association with a business account
      description: Remove a user's association with a specific business account
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successfully removed user's association with business account
          content: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{userID}/business-account/{businessAccountID}/can-perform-action:
    post:
      tags:
        - User
      summary: Check if a user can perform an action
      description: Check if a user can perform a certain action based on their role
        in the business account
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: integer
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Action
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Successfully checked permission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.PermissionDTO'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: action
  /api/v1/users/{userID}/business-accounts:
    get:
      tags:
        - User
      summary: Get all business accounts a user is associated with
      description: Get all business accounts a user is associated with
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved business accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{userID}/followed-contents:
    get:
      tags:
        - User
      summary: Get followed contents
      description: Get posts of users and businesses followed by the user
      parameters:
        - name: userID
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Post'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/{userID}/posts:
    get:
      tags:
        - User
      summary: Retrieve posts by user
      description: Get posts by the authenticated user
      responses:
        200:
          description: Successfully retrieved posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_Dto.PostResponseDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /api/v1/users/business-account:
    post:
      tags:
        - User
      summary: Create a new business account
      description: Create a new business account for the authenticated user
      requestBody:
        description: Business Account Name
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        201:
          description: Successfully created business account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: name
  /api/v1/users/business-account/{businessAccountID}/users:
    get:
      tags:
        - User
      summary: Get all users for a business account
      description: Get all users associated with a specific business account
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /business/:
    get:
      tags:
        - Business
      summary: List all business accounts
      operationId: list-business-accounts
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
    post:
      tags:
        - Business
      summary: Create a business account
      operationId: create-business-account
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Business Account Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.BusinessDto'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
      x-codegen-request-body-name: Dto.BusinessDto
  /business/{businessAccountID}:
    get:
      tags:
        - Business
      summary: Get a business account
      operationId: get-business-account
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
    delete:
      tags:
        - Business
      summary: Delete a business account
      operationId: delete-business-account
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessAccountID}/associated:
    get:
      tags:
        - Business
      summary: Get Places and Events associated with a Business Account
      description: Retrieve All Places and Events associated with a Business Account
      operationId: get-places-and-events-associated-with-business-account
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: All
          in: query
          description: All
          schema:
            type: boolean
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.BusinessAccountPlacesAndEvents'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /business/{businessAccountID}/event:
    post:
      tags:
        - Business
      summary: Add a new Event to a Business Account
      description: Add a new Event to a Business Account
      operationId: add-a-new-event-to-business-account
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Event DTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.EventDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
      x-codegen-request-body-name: Dto.EventDTO
  /business/{businessAccountID}/team-members:
    get:
      tags:
        - Business
      summary: List all team members of a Business Account
      operationId: list-team-members
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_Dto.TeamMember'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /business/{businessAccountID}/team-members/{userID}:
    post:
      tags:
        - Business
      summary: Add a team member to a Business Account
      operationId: add-team-member
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Permissions
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
      x-codegen-request-body-name: permissions
    delete:
      tags:
        - Business
      summary: Remove a team member from a Business Account
      operationId: remove-team-member
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
    patch:
      tags:
        - Business
      summary: Edit a team member in a Business Account
      operationId: edit-team-member
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: Permissions
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
      x-codegen-request-body-name: permissions
  /business/{businessAccountID}/team-members/search:
    get:
      tags:
        - Business
      summary: Search team members in a Business Account
      operationId: search-team-members
      parameters:
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: searchText
          in: query
          description: Search Text
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_Dto.TeamMember'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /business/{businessAccountID}/user/{currentOwnerID}/{newOwnerID}:
    put:
      tags:
        - Business
      summary: Transfer business account ownership
      operationId: transfer-business-account-ownership
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: currentOwnerID
          in: path
          description: Current Owner ID
          required: true
          schema:
            type: string
        - name: newOwnerID
          in: path
          description: New Owner ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessAccountID}/user/{userID}:
    post:
      tags:
        - Business
      summary: Associate user with business account
      operationId: associate-user-business-account
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
    delete:
      tags:
        - Business
      summary: Remove user from business account
      operationId: remove-user-business-account
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessAccountID}/users:
    get:
      tags:
        - Business
      summary: Get users for a business account
      operationId: get-users-business-account
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: businessAccountID
          in: path
          description: Business Account ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessID}/follow/user/{userID}:
    post:
      tags:
        - Business
      summary: Follow a user by a business
      description: Retrieve all comments for a given post
      operationId: follow-user
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessID}/followed-contents:
    get:
      tags:
        - Business
      summary: Get contents followed by a business
      operationId: get-followed-contents
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{businessID}/unfollow/user/{userID}:
    delete:
      tags:
        - Business
      summary: Unfollow a user by a business
      operationId: unfollow-user
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{followerBusinessID}/follow/business/{followedID}:
    post:
      tags:
        - Business
      summary: Follow a business by another business
      operationId: follow-business
      parameters:
        - name: followerBusinessID
          in: path
          description: Follower Business ID
          required: true
          schema:
            type: string
        - name: followedBusinessID
          in: path
          description: Followed Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/{followerBusinessID}/unfollow/business/{followedBusinessID}:
    delete:
      tags:
        - Business
      summary: Unfollow a business by another business
      operationId: unfollow-business
      parameters:
        - name: followerBusinessID
          in: path
          description: Follower Business ID
          required: true
          schema:
            type: string
        - name: followedBusinessID
          in: path
          description: Followed Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /business/user-business-account:
    get:
      tags:
        - Business
      summary: Get user business accounts
      operationId: get-user-business-accounts
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDto'
  /categories/:
    post:
      tags:
        - categories
      summary: Create a new category
      requestBody:
        description: Category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_ent.Category'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Category'
      x-codegen-request-body-name: category
  /categories/{categoryID}/businesses:
    get:
      tags:
        - categories
      summary: Get businesses by category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Business'
  /categories/{categoryID}/businesses/{businessID}:
    post:
      tags:
        - categories
      summary: Assign a business to a category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
  /categories/{categoryID}/places:
    get:
      tags:
        - categories
      summary: Get places by category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Place'
  /categories/{categoryID}/places/{placeID}:
    post:
      tags:
        - categories
      summary: Assign a place to a category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
        - name: placeID
          in: path
          description: Place ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
  /categories/{categoryID}/users:
    get:
      tags:
        - categories
      summary: Get users by category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.User'
  /categories/{categoryID}/users/{userID}:
    post:
      tags:
        - categories
      summary: Assign a user to a category
      parameters:
        - name: categoryID
          in: path
          description: Category ID
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
  /categories/{id}:
    delete:
      tags:
        - categories
      summary: Delete a category
      parameters:
        - name: id
          in: path
          description: Category ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Category'
    patch:
      tags:
        - categories
      summary: Update an existing category
      parameters:
        - name: id
          in: path
          description: Category ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_ent.Category'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Category'
      x-codegen-request-body-name: category
  /categories/search:
    get:
      tags:
        - categories
      summary: Search by category
      parameters:
        - name: name
          in: query
          description: Category name
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Category'
  /events:
    get:
      tags:
        - Event
      summary: Get all Events
      description: Get Events
      parameters:
        - name: eventType
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: location
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: status
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: timeZone
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: title
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: url
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Page Number
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page Size
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
    post:
      tags:
        - Event
      summary: Create Event
      description: Create Event
      parameters:
        - name: businessId
          in: query
          description: Business ID
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      requestBody:
        description: Event Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.EventDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: data
  /events/{eventId}:
    get:
      tags:
        - Event
      summary: Get Event By ID
      description: Get a single event by its ID
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
    put:
      tags:
        - Event
      summary: Update Event
      description: Update Event
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: businessId
          in: query
          description: Business ID
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      requestBody:
        description: Event Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.EventDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Event
      summary: Delete Event
      description: Delete an existing event
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Deleted
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /events/participants/{eventId}:
    get:
      tags:
        - Event
      summary: Get Event Participants
      description: Get Event Participants
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /faq/{faqID}:
    get:
      tags:
        - FAQ
      summary: Get FAQ by ID
      description: Retrieve FAQ by ID
      operationId: get-FAQ
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
        - name: faqID
          in: path
          description: FAQ ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.FAQ'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
    delete:
      tags:
        - FAQ
      summary: Delete FAQ by ID
      description: Delete FAQ by ID
      operationId: delete-FAQ
      parameters:
        - name: faqID
          in: path
          description: FAQ ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: FAQ deleted successfully
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
    patch:
      tags:
        - FAQ
      summary: Update FAQ by ID
      description: Update FAQ by ID
      operationId: update-FAQ
      parameters:
        - name: faqID
          in: path
          description: FAQ ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: FAQ Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.FAQDto'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.FAQ'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
      x-codegen-request-body-name: faqData
  /faq/{faqID}/event/{eventID}:
    post:
      tags:
        - FAQ
      summary: Associate FAQ with Event
      description: Associate a FAQ with an Event by their IDs
      operationId: associate-FAQ-event
      parameters:
        - name: faqID
          in: path
          description: FAQ ID
          required: true
          schema:
            type: string
        - name: eventID
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: FAQ associated with event successfully
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /faq/{faqID}/place/{placeID}:
    post:
      tags:
        - FAQ
      summary: Associate FAQ with Place
      description: Associate a FAQ with a Place by their IDs
      operationId: associate-FAQ-place
      parameters:
        - name: faqID
          in: path
          description: FAQ ID
          required: true
          schema:
            type: string
        - name: placeID
          in: path
          description: Place ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: FAQ associated with place successfully
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /faq/business/{businessID}:
    post:
      tags:
        - FAQ
      summary: Create a new FAQ
      description: Create a new FAQ for a specific Business
      operationId: create-faq
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      requestBody:
        description: FAQ Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/placio-app_Dto.FAQDto'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.FAQDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
      x-codegen-request-body-name: faqData
  /follow/business/{businessID}:
    post:
      tags:
        - Follow
      summary: Follow a business
      description: Follow a specific Business by the user
      operationId: user-follow-business
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        201:
          description: User successfully followed the business
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /follow/event/{eventID}:
    post:
      tags:
        - Follow
      summary: Follow an event
      description: Follow a specific Event by the user
      operationId: follow-event
      parameters:
        - name: eventID
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        201:
          description: User successfully followed the event
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /follow/place/{placeID}:
    post:
      tags:
        - Follow
      summary: Follow a place
      description: Follow a specific Place by the user
      operationId: follow-place
      parameters:
        - name: placeID
          in: path
          description: Place ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        201:
          description: User successfully followed the place
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /follow/user/{userID}:
    post:
      tags:
        - Follow
      summary: Follow a user
      description: Follow a specific User
      operationId: user-follow-user
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        201:
          description: User successfully followed the user
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /followed/businesses:
    get:
      tags:
        - Follow
      summary: Get followed businesses by a user
      description: Get all Businesses followed by the user
      operationId: get-followed-businesses
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Business'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /followed/events:
    get:
      tags:
        - Follow
      summary: Get followed events by a user
      description: Get all Events followed by the user
      operationId: get-followed-events
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Event'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /followed/places:
    get:
      tags:
        - Follow
      summary: Get followed places by a user
      description: Get all Places followed by the user
      operationId: get-followed-places
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /followed/users:
    get:
      tags:
        - Follow
      summary: Get followed users by a user
      description: Get all Users followed by the user
      operationId: get-followed-users
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /places:
    get:
      tags:
        - Place
      summary: Get all Places
      description: Get Places by applying various filters (ID, Name, Type, Country,
        City, State, Tags, Features)
      parameters:
        - name: city
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: country
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: email
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: features
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: phone
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: state
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: tags
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: website
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Page Number
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page Size
          schema:
            type: integer
        - name: Authorization
          in: header
          description: Bearer Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Place'
        400:
          description: Invalid inputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        401:
          description: Unauthorized. Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.ErrorDTO'
  /reviews/:
    get:
      tags:
        - Review
      summary: Get reviews by query
      description: Get reviews based on query parameters
      responses:
        200:
          description: Array of Reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/placio-app_ent.Review'
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - Review
      summary: Review a Place, Event, or Business
      description: Rate a place, event, or business
      parameters:
        - name: type
          in: query
          description: Item Type (place, event, business)
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: Item ID (placeID, eventID, businessID)
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      requestBody:
        description: Review Content
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Successfully rated [itemType]
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid item type
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: content
  /reviews/{reviewID}:
    get:
      tags:
        - Review
      summary: Get review by ID
      description: Retrieve a review using its ID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Review data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_ent.Review'
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
        - Review
      summary: Update review content
      description: Update the content of a review based on reviewID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      requestBody:
        description: New Review Content
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Successfully updated review
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: content
    delete:
      tags:
        - Review
      summary: Remove a review
      description: Remove a review based on reviewID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted review
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
  /reviews/{reviewID}/addMedia:
    post:
      tags:
        - Review
      summary: Add media to a review
      description: Add media to a review based on reviewID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
      requestBody:
        description: Media File
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: Successfully added media to review
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: string
  /reviews/{reviewID}/dislike:
    post:
      tags:
        - Review
      summary: Dislike a review
      description: Dislike a review based on reviewID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully disliked review
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
  /reviews/{reviewID}/like:
    post:
      tags:
        - Review
      summary: Like a review
      description: Like a review based on reviewID
      parameters:
        - name: reviewID
          in: path
          description: Review ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: JWT Token
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully liked review
          content:
            application/json:
              schema:
                type: string
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: string
  /unfollow/business/{businessID}:
    delete:
      tags:
        - Follow
      summary: Unfollow a business
      description: Unfollow a specific Business by the user
      operationId: user-unfollow-business
      parameters:
        - name: businessID
          in: path
          description: Business ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: User successfully unfollowed the business
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /unfollow/event/{eventID}:
    delete:
      tags:
        - Follow
      summary: Unfollow an event
      description: Unfollow a specific Event by the user
      operationId: unfollow-event
      parameters:
        - name: eventID
          in: path
          description: Event ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: User successfully unfollowed the event
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /unfollow/place/{placeID}:
    delete:
      tags:
        - Follow
      summary: Unfollow a place
      description: Unfollow a specific Place by the user
      operationId: unfollow-place
      parameters:
        - name: placeID
          in: path
          description: Place ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: User successfully unfollowed the place
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
  /unfollow/user/{userID}:
    delete:
      tags:
        - Follow
      summary: Unfollow a user
      description: Unfollow a specific User
      operationId: user-unfollow-user
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token
          required: true
          schema:
            type: string
      responses:
        200:
          description: User successfully unfollowed the user
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/placio-app_Dto.Error'
components:
  schemas:
    gin.H:
      type: object
      additionalProperties:
        type: object
    gorm.DeletedAt:
      type: object
      properties:
        time:
          type: string
        valid:
          type: boolean
          description: Valid is true if Time is not NULL
    management.User:
      type: object
      properties:
        app_metadata:
          type: object
          properties: {}
          description: |-
            AppMetadata holds data that the user has read-only access to.
            For example roles, permissions, vip, etc.
            NOTE: Roles added to AppMetadata are not integrated with Auth0 Role-Based Access Control (RBAC).
            For RBAC, see the functions User.Roles, User.AssignRoles, and User.RemoveRoles.
        blocked:
          type: boolean
          description: True if the user is blocked from the application, false if
            the user is enabled.
        client_id:
          type: string
          description: Auth0 client ID. Only valid when updating email address.
        connection:
          type: string
          description: The connection the user belongs to.
        created_at:
          type: string
          description: The time the user was created.
        description:
          type: string
          description: The user-defined UTF-8 string describing their account.
        email:
          type: string
          description: The users' email.
        family_name:
          type: string
          description: The users' family name.
        given_name:
          type: string
          description: The users' given name.
        identities:
          type: array
          description: Identities is a list of user identities for when accounts are
            linked.
          items:
            $ref: '#/components/schemas/management.UserIdentity'
        last_ip:
          type: string
          description: Last IP address from which this user logged in. Read only,
            cannot be modified.
        last_login:
          type: string
          description: The last time the user has logged in.
        last_password_reset:
          type: string
          description: |-
            The last time the user had their password reset.
            Only available for Database connection users.
        location:
          type: string
          description: The user-defined location for this account’s profile.
        logins_count:
          type: integer
          description: Total number of logins this user has performed. Read only,
            cannot be modified.
        multifactor:
          type: array
          description: List of multi-factor authentication providers with which this
            user has enrolled.
          items:
            type: string
        name:
          type: string
          description: The users' name.
        nickname:
          type: string
          description: The users' nickname.
        password:
          type: string
          description: The users' password (mandatory for non SMS connections)
        phone_number:
          type: string
          description: |-
            The users' phone number (following the E.164 recommendation).
            Only valid for users to be added to SMS connections.
        phone_verified:
          type: boolean
          description: |-
            True if the user's phone number is verified, false otherwise. When the
            user is added to an SMS connection, they will not receive a verification
            SMS if this is true.
        picture:
          type: string
          description: The user's picture url.
        screen_name:
          type: string
          description: The screen name, handle, or alias that this user identifies
            themselves with.
        updated_at:
          type: string
          description: The last time the user was updated.
        url:
          type: string
          description: A URL provided by the user in association with their profile.
        user_id:
          type: string
          description: The users' identifier.
        user_metadata:
          type: object
          properties: {}
          description: |-
            UserMetadata holds data that the user has read/write access to.
            For example color_preference, blog_url, etc.
        username:
          type: string
          description: The users' username. Only valid if the connection requires
            a username.
        verify_email:
          type: boolean
          description: |-
            If true, the user will receive a verification email after creation, even
            if created with email_verified set to true. If false, the user will not
            receive a verification email, even if created with email_verified set to
            false. If unspecified, defaults to the behavior determined by the value
            of email_verified.
    management.UserIdentity:
      type: object
      properties:
        access_token:
          type: string
        access_token_secret:
          type: string
        connection:
          type: string
        isSocial:
          type: boolean
        profileData:
          type: object
          properties: {}
        provider:
          type: string
        refresh_token:
          type: string
    placio-app_Dto.AmenityAdditionDTO:
      type: object
      properties:
        amenity_ids:
          type: array
          items:
            type: string
    placio-app_Dto.BusinessAccountPlacesAndEvents:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.Event'
        places:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
    placio-app_Dto.BusinessDto:
      type: object
      properties:
        cover_image:
          type: string
        description:
          type: string
        email:
          type: string
        location:
          type: string
        name:
          type: string
        phone:
          type: string
        picture:
          type: string
        website:
          type: string
    placio-app_Dto.CommentResponseDto:
      type: object
      properties:
        content:
          type: string
        createdAt:
          type: string
        id:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_Dto.CreateAmenityInput:
      type: object
      properties:
        icon:
          type: string
        name:
          type: string
    placio-app_Dto.CreatePlaceDTO:
      type: object
      properties:
        additional_info:
          type: object
          properties: {}
        amenity_ids:
          type: array
          items:
            type: string
        availability:
          type: object
          properties: {}
        business_id:
          type: string
        city:
          type: string
        country:
          type: string
        cover_image:
          type: string
        description:
          type: string
        email:
          type: string
        features:
          type: array
          items:
            type: string
        id:
          type: string
        images:
          type: array
          items:
            type: string
        location:
          type: string
        map_coordinates:
          type: object
          properties: {}
        name:
          type: string
        opening_hours:
          type: object
          properties: {}
        phone:
          type: string
        picture:
          type: string
        place_settings:
          type: object
          properties: {}
        relevance_score:
          type: number
        search_text:
          type: string
        social_media:
          type: object
          properties: {}
        special_offers:
          type: string
        state:
          type: string
        sustainability_score:
          type: number
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        website:
          type: string
    placio-app_Dto.Error:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    placio-app_Dto.ErrorDTO:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    placio-app_Dto.ErrorDto:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    placio-app_Dto.EventDTO:
      type: object
      properties:
        coverImage:
          type: string
        createdAt:
          type: string
        description:
          type: string
        endDate:
          type: string
        endTime:
          type: string
        eventSettings:
          type: object
          properties: {}
        eventType:
          type: string
        frequency:
          type: string
        frequencyDayOfMonth:
          type: string
        frequencyDayOfWeek:
          type: string
        frequencyInterval:
          type: string
        frequencyMonthOfYear:
          type: string
        id:
          type: string
        location:
          type: string
        name:
          type: string
        startDate:
          type: string
        startTime:
          type: string
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        timeZone:
          type: string
        title:
          type: string
        updatedAt:
          type: string
        url:
          type: string
        venueAddress:
          type: string
        venueCity:
          type: string
        venueCountry:
          type: string
        venueEmail:
          type: string
        venueLat:
          type: string
        venueLon:
          type: string
        venueName:
          type: string
        venuePhone:
          type: string
        venueState:
          type: string
        venueType:
          type: string
        venueURL:
          type: string
        venueZIP:
          type: string
    placio-app_Dto.FAQDto:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
    placio-app_Dto.MediaDto:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
    placio-app_Dto.PermissionDTO:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    placio-app_Dto.PostDto:
      type: object
      properties:
        business_id:
          type: string
          description: It can be empty if it does not exist
        content:
          type: string
        created_at:
          type: string
        id:
          type: string
        medias:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_Dto.MediaDto'
        privacy:
          type: string
        user_id:
          type: string
    placio-app_Dto.PostResponseDto:
      type: object
      properties:
        business:
          type: object
          description: It can be empty if it does not exist
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        content:
          type: string
        created_at:
          type: string
        id:
          type: string
        medias:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_Dto.MediaDto'
        user:
          $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_Dto.RatingDTO:
      type: object
      properties:
        business:
          $ref: '#/components/schemas/placio-app_ent.Business'
        event:
          $ref: '#/components/schemas/placio-app_ent.Event'
        place:
          $ref: '#/components/schemas/placio-app_ent.Place'
        score:
          type: integer
        user:
          $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_Dto.Response:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
        status:
          type: integer
    placio-app_Dto.SearchResponse:
      type: object
    placio-app_Dto.SearchResponses:
      type: object
      properties:
        businesses:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.Business'
        events:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.Event'
        places:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
        users:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_Dto.TeamMember:
      type: object
      properties:
        permission:
          type: string
        role:
          type: string
    placio-app_Dto.UpdateAmenityInput:
      type: object
      properties:
        icon:
          type: string
        name:
          type: string
    placio-app_Dto.UpdatePlaceDTO:
      type: object
      properties:
        additional_info:
          type: object
          properties: {}
        availability:
          type: object
          properties: {}
        city:
          type: string
        country:
          type: string
        cover_image:
          type: string
        description:
          type: string
        email:
          type: string
        features:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            type: string
        location:
          type: string
        map_coordinates:
          type: object
          properties: {}
        name:
          type: string
        opening_hours:
          type: object
          properties: {}
        phone:
          type: string
        picture:
          type: string
        place_settings:
          type: object
          properties: {}
        relevance_score:
          type: number
        search_text:
          type: string
        social_media:
          type: object
          properties: {}
        special_offers:
          type: string
        state:
          type: string
        sustainability_score:
          type: number
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        website:
          type: string
    placio-app_ent.AccountSettings:
      type: object
      properties:
        BlockedUsers:
          type: array
          description: BlockedUsers holds the value of the "BlockedUsers" field.
          items:
            type: string
        MutedUsers:
          type: array
          description: MutedUsers holds the value of the "MutedUsers" field.
          items:
            type: string
        TwoFactorAuthentication:
          type: boolean
          description: TwoFactorAuthentication holds the value of the "TwoFactorAuthentication"
            field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the AccountSettingsQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.AccountSettingsEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.AccountSettingsEdges:
      type: object
      properties:
        business_account:
          type: object
          description: BusinessAccount holds the value of the business_account edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
    placio-app_ent.Amenity:
      type: object
      properties:
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the AmenityQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.AmenityEdges'
        icon:
          type: string
          description: Icon holds the value of the "icon" field.
        id:
          type: string
          description: ID of the ent.
        name:
          type: string
          description: Name holds the value of the "name" field.
    placio-app_ent.AmenityEdges:
      type: object
      properties:
        places:
          type: array
          description: Places holds the value of the places edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
    placio-app_ent.Booking:
      type: object
      properties:
        bookingDate:
          type: string
          description: BookingDate holds the value of the "bookingDate" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the BookingQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.BookingEdges'
        endDate:
          type: string
          description: EndDate holds the value of the "endDate" field.
        id:
          type: string
          description: ID of the ent.
        startDate:
          type: string
          description: StartDate holds the value of the "startDate" field.
        status:
          type: string
          description: Status holds the value of the "status" field.
    placio-app_ent.BookingEdges:
      type: object
      properties:
        room:
          type: object
          description: Room holds the value of the room edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Room'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Business:
      type: object
      properties:
        business_settings:
          type: object
          properties: {}
          description: BusinessSettings holds the value of the "business_settings"
            field.
        cover_image:
          type: string
          description: CoverImage holds the value of the "cover_image" field.
        description:
          type: string
          description: Description holds the value of the "description" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the BusinessQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.BusinessEdges'
        email:
          type: string
          description: Email holds the value of the "email" field.
        id:
          type: string
          description: ID of the ent.
        latitude:
          type: string
          description: Latitude holds the value of the "latitude" field.
        location:
          type: string
          description: Location holds the value of the "location" field.
        longitude:
          type: string
          description: Longitude holds the value of the "longitude" field.
        map_coordinates:
          type: object
          properties: {}
          description: MapCoordinates holds the value of the "map_coordinates" field.
        name:
          type: string
          description: Name holds the value of the "name" field.
        phone:
          type: string
          description: Phone holds the value of the "phone" field.
        picture:
          type: string
          description: Picture holds the value of the "picture" field.
        relevance_score:
          type: number
          description: RelevanceScore holds the value of the "relevance_score" field.
        search_text:
          type: string
          description: SearchText holds the value of the "search_text" field.
        url:
          type: string
          description: URL holds the value of the "url" field.
        website:
          type: string
          description: Website holds the value of the "website" field.
    placio-app_ent.BusinessEdges:
      type: object
      properties:
        business_account_settings:
          type: object
          description: BusinessAccountSettings holds the value of the business_account_settings
            edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.AccountSettings'
        businessFollowEvents:
          type: array
          description: BusinessFollowEvents holds the value of the businessFollowEvents
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowEvent'
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        categoryAssignments:
          type: array
          description: CategoryAssignments holds the value of the categoryAssignments
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
        events:
          type: array
          description: Events holds the value of the events edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Event'
        faqs:
          type: array
          description: Faqs holds the value of the faqs edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.FAQ'
        followedBusinesses:
          type: array
          description: FollowedBusinesses holds the value of the followedBusinesses
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowBusiness'
        followedUsers:
          type: array
          description: FollowedUsers holds the value of the followedUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowUser'
        followerBusinesses:
          type: array
          description: FollowerBusinesses holds the value of the followerBusinesses
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowBusiness'
        followerUsers:
          type: array
          description: FollowerUsers holds the value of the followerUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowBusiness'
        places:
          type: array
          description: Places holds the value of the places edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
        posts:
          type: array
          description: Posts holds the value of the posts edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Post'
        ratings:
          type: array
          description: Ratings holds the value of the ratings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Rating'
        userBusinesses:
          type: array
          description: UserBusinesses holds the value of the userBusinesses edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserBusiness'
    placio-app_ent.BusinessFollowBusiness:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the BusinessFollowBusinessQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.BusinessFollowBusinessEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.BusinessFollowBusinessEdges:
      type: object
      properties:
        followed:
          type: object
          description: Followed holds the value of the followed edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        follower:
          type: object
          description: Follower holds the value of the follower edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
    placio-app_ent.BusinessFollowEvent:
      type: object
      properties:
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the BusinessFollowEventQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.BusinessFollowEventEdges'
        id:
          type: string
          description: ID of the ent.
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
    placio-app_ent.BusinessFollowEventEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        event:
          type: object
          description: Event holds the value of the event edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
    placio-app_ent.BusinessFollowUser:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the BusinessFollowUserQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.BusinessFollowUserEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.BusinessFollowUserEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Category:
      type: object
      properties:
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the CategoryQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.CategoryEdges'
        id:
          type: string
          description: ID of the ent.
        image:
          type: string
          description: Image holds the value of the "image" field.
        name:
          type: string
          description: Name holds the value of the "name" field.
    placio-app_ent.CategoryAssignment:
      type: object
      properties:
        category_id:
          type: string
          description: This represents the ID of the category
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the CategoryAssignmentQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.CategoryAssignmentEdges'
        entity_id:
          type: string
          description: This represents the ID of User, Business or Place entity
        entity_type:
          type: string
          description: 'This represents the type of entity: User, Business, or Place'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.CategoryAssignmentEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        category:
          type: object
          description: Category holds the value of the category edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Category'
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.CategoryEdges:
      type: object
      properties:
        categoryAssignments:
          type: array
          description: CategoryAssignments holds the value of the categoryAssignments
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
    placio-app_ent.Comment:
      type: object
      properties:
        Content:
          type: string
          description: Content holds the value of the "Content" field.
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the CommentQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.CommentEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.CommentEdges:
      type: object
      properties:
        post:
          type: object
          description: Post holds the value of the post edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Post'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Event:
      type: object
      properties:
        EventType:
          type: object
          description: EventType holds the value of the "EventType" field.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent_event.EventType'
        cover_image:
          type: string
          description: CoverImage holds the value of the "cover_image" field.
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        description:
          type: string
          description: Description holds the value of the "description" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the EventQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.EventEdges'
        end_date:
          type: string
          description: EndDate holds the value of the "end_date" field.
        end_time:
          type: string
          description: EndTime holds the value of the "end_time" field.
        event_settings:
          type: object
          properties: {}
          description: EventSettings holds the value of the "event_settings" field.
        frequency:
          type: object
          description: Frequency holds the value of the "frequency" field.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent_event.Frequency'
        frequency_day_of_month:
          type: string
          description: FrequencyDayOfMonth holds the value of the "frequency_day_of_month"
            field.
        frequency_day_of_week:
          type: string
          description: FrequencyDayOfWeek holds the value of the "frequency_day_of_week"
            field.
        frequency_interval:
          type: string
          description: FrequencyInterval holds the value of the "frequency_interval"
            field.
        frequency_month_of_year:
          type: string
          description: FrequencyMonthOfYear holds the value of the "frequency_month_of_year"
            field.
        id:
          type: string
          description: ID of the ent.
        latitude:
          type: string
          description: Latitude holds the value of the "latitude" field.
        location:
          type: string
          description: Location holds the value of the "location" field.
        longitude:
          type: string
          description: Longitude holds the value of the "longitude" field.
        map_coordinates:
          type: object
          properties: {}
          description: MapCoordinates holds the value of the "map_coordinates" field.
        name:
          type: string
          description: Name holds the value of the "name" field.
        relevance_score:
          type: number
          description: RelevanceScore holds the value of the "relevance_score" field.
        search_text:
          type: string
          description: SearchText holds the value of the "search_text" field.
        start_date:
          type: string
          description: StartDate holds the value of the "start_date" field.
        start_time:
          type: string
          description: StartTime holds the value of the "start_time" field.
        status:
          type: string
          description: Status holds the value of the "status" field.
        tags:
          type: string
          description: Tags holds the value of the "tags" field.
        time_zone:
          type: string
          description: TimeZone holds the value of the "time_zone" field.
        title:
          type: string
          description: Title holds the value of the "title" field.
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
        url:
          type: string
          description: URL holds the value of the "url" field.
        venue_address:
          type: string
          description: VenueAddress holds the value of the "venue_address" field.
        venue_city:
          type: string
          description: VenueCity holds the value of the "venue_city" field.
        venue_country:
          type: string
          description: VenueCountry holds the value of the "venue_country" field.
        venue_email:
          type: string
          description: VenueEmail holds the value of the "venue_email" field.
        venue_lat:
          type: string
          description: VenueLat holds the value of the "venue_lat" field.
        venue_lon:
          type: string
          description: VenueLon holds the value of the "venue_lon" field.
        venue_name:
          type: string
          description: VenueName holds the value of the "venue_name" field.
        venue_phone:
          type: string
          description: VenuePhone holds the value of the "venue_phone" field.
        venue_state:
          type: string
          description: VenueState holds the value of the "venue_state" field.
        venue_type:
          type: object
          description: VenueType holds the value of the "venue_type" field.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent_event.VenueType'
        venue_url:
          type: string
          description: VenueURL holds the value of the "venue_url" field.
        venue_zip:
          type: string
          description: VenueZip holds the value of the "venue_zip" field.
    placio-app_ent.EventEdges:
      type: object
      properties:
        businessFollowers:
          type: array
          description: BusinessFollowers holds the value of the businessFollowers
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowEvent'
        event_categories:
          type: array
          description: EventCategories holds the value of the event_categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        event_category_assignments:
          type: array
          description: EventCategoryAssignments holds the value of the event_category_assignments
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
        faqs:
          type: array
          description: Faqs holds the value of the faqs edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.FAQ'
        ownerBusiness:
          type: object
          description: OwnerBusiness holds the value of the ownerBusiness edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        ownerUser:
          type: object
          description: OwnerUser holds the value of the ownerUser edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
        place:
          type: array
          description: Place holds the value of the place edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
        ratings:
          type: array
          description: Ratings holds the value of the ratings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Rating'
        ticket_options:
          type: array
          description: TicketOptions holds the value of the ticket_options edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.TicketOption'
        tickets:
          type: array
          description: Tickets holds the value of the tickets edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Ticket'
        userFollowers:
          type: array
          description: UserFollowers holds the value of the userFollowers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowEvent'
    placio-app_ent.FAQ:
      type: object
      properties:
        answer:
          type: string
          description: Answer holds the value of the "answer" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the FAQQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.FAQEdges'
        id:
          type: string
          description: ID of the ent.
        question:
          type: string
          description: Question holds the value of the "question" field.
    placio-app_ent.FAQEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        event:
          type: array
          description: Event holds the value of the event edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Event'
        place:
          type: array
          description: Place holds the value of the place edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
    placio-app_ent.Help:
      type: object
      properties:
        body:
          type: string
          description: Body holds the value of the "body" field.
        category:
          type: string
          description: Category holds the value of the "category" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the HelpQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.HelpEdges'
        id:
          type: string
          description: ID of the ent.
        media:
          type: string
          description: Media holds the value of the "media" field.
        status:
          type: string
          description: Status holds the value of the "status" field.
        subject:
          type: string
          description: Subject holds the value of the "subject" field.
        user_id:
          type: string
          description: UserID holds the value of the "user_id" field.
    placio-app_ent.HelpEdges:
      type: object
      properties:
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Like:
      type: object
      properties:
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the LikeQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.LikeEdges'
        id:
          type: string
          description: ID of the ent.
        like:
          type: boolean
          description: True for like, False for dislike
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
    placio-app_ent.LikeEdges:
      type: object
      properties:
        media:
          type: object
          description: The media content that was liked/disliked.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Media'
        post:
          type: object
          description: Post holds the value of the post edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Post'
        review:
          type: object
          description: The review that was liked/disliked.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Review'
        user:
          type: object
          description: The user who liked/disliked the review/media.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Media:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        MediaType:
          type: string
          description: image, gif, or video
        URL:
          type: string
          description: URL holds the value of the "URL" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        dislikeCount:
          type: integer
          description: Count of dislikes for this media.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the MediaQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.MediaEdges'
        id:
          type: string
          description: ID of the ent.
        likeCount:
          type: integer
          description: Count of likes for this media.
    placio-app_ent.MediaEdges:
      type: object
      properties:
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        post:
          type: object
          description: Post holds the value of the post edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Post'
        review:
          type: object
          description: Review holds the value of the review edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Review'
    placio-app_ent.Menu:
      type: object
      properties:
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the MenuQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.MenuEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.MenuEdges:
      type: object
      properties:
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
    placio-app_ent.Place:
      type: object
      properties:
        additional_info:
          type: object
          properties: {}
          description: AdditionalInfo holds the value of the "additional_info" field.
        availability:
          type: object
          properties: {}
          description: Availability holds the value of the "availability" field.
        city:
          type: string
          description: City holds the value of the "city" field.
        country:
          type: string
          description: Country holds the value of the "country" field.
        cover_image:
          type: string
          description: CoverImage holds the value of the "cover_image" field.
        description:
          type: string
          description: Description holds the value of the "description" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the PlaceQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.PlaceEdges'
        email:
          type: string
          description: Email holds the value of the "email" field.
        features:
          type: array
          description: Features holds the value of the "features" field.
          items:
            type: string
        id:
          type: string
          description: ID of the ent.
        images:
          type: array
          description: Images holds the value of the "images" field.
          items:
            type: string
        latitude:
          type: string
          description: Latitude holds the value of the "latitude" field.
        location:
          type: string
          description: Location holds the value of the "location" field.
        longitude:
          type: string
          description: Longitude holds the value of the "longitude" field.
        map_coordinates:
          type: object
          properties: {}
          description: MapCoordinates holds the value of the "map_coordinates" field.
        name:
          type: string
          description: Name holds the value of the "name" field.
        opening_hours:
          type: object
          properties: {}
          description: OpeningHours holds the value of the "opening_hours" field.
        payment_options:
          type: object
          properties: {}
          description: PaymentOptions holds the value of the "payment_options" field.
        phone:
          type: string
          description: Phone holds the value of the "phone" field.
        picture:
          type: string
          description: Picture holds the value of the "picture" field.
        place_settings:
          type: object
          properties: {}
          description: PlaceSettings holds the value of the "place_settings" field.
        relevance_score:
          type: number
          description: RelevanceScore holds the value of the "relevance_score" field.
        search_text:
          type: string
          description: SearchText holds the value of the "search_text" field.
        social_media:
          type: object
          properties: {}
          description: SocialMedia holds the value of the "social_media" field.
        special_offers:
          type: string
          description: SpecialOffers holds the value of the "special_offers" field.
        state:
          type: string
          description: State holds the value of the "state" field.
        sustainability_score:
          type: number
          description: SustainabilityScore holds the value of the "sustainability_score"
            field.
        tags:
          type: array
          description: Tags holds the value of the "tags" field.
          items:
            type: string
        type:
          type: string
          description: Type holds the value of the "type" field.
        website:
          type: string
          description: Website holds the value of the "website" field.
    placio-app_ent.PlaceEdges:
      type: object
      properties:
        amenities:
          type: array
          description: Amenities holds the value of the amenities edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Amenity'
        bookings:
          type: array
          description: Bookings holds the value of the bookings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Booking'
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        categoryAssignments:
          type: array
          description: CategoryAssignments holds the value of the categoryAssignments
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
        events:
          type: array
          description: Events holds the value of the events edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Event'
        faqs:
          type: array
          description: Faqs holds the value of the faqs edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.FAQ'
        followerUsers:
          type: array
          description: FollowerUsers holds the value of the followerUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowPlace'
        likedByUsers:
          type: array
          description: LikedByUsers holds the value of the likedByUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserLikePlace'
        menus:
          type: array
          description: Menus holds the value of the menus edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Menu'
        ratings:
          type: array
          description: Ratings holds the value of the ratings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Rating'
        reservations:
          type: array
          description: Reservations holds the value of the reservations edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Reservation'
        reviews:
          type: array
          description: Reviews holds the value of the reviews edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Review'
        rooms:
          type: array
          description: Rooms holds the value of the rooms edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Room'
        users:
          type: array
          description: Users holds the value of the users edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Post:
      type: object
      properties:
        Content:
          type: string
          description: Content holds the value of the "Content" field.
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        Privacy:
          type: object
          description: Privacy holds the value of the "Privacy" field.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent_post.Privacy'
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the PostQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.PostEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.PostEdges:
      type: object
      properties:
        business_account:
          type: object
          description: BusinessAccount holds the value of the business_account edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        comments:
          type: array
          description: Comments holds the value of the comments edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Comment'
        likes:
          type: array
          description: Likes holds the value of the likes edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Like'
        medias:
          type: array
          description: Medias holds the value of the medias edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Media'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Rating:
      type: object
      properties:
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the RatingQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.RatingEdges'
        id:
          type: string
          description: ID of the ent.
        ratedAt:
          type: string
          description: When the rating was given.
        review:
          type: string
          description: User's review to the business/place/event.
        score:
          type: integer
          description: Score should be between 1 and 5.
    placio-app_ent.RatingEdges:
      type: object
      properties:
        business:
          type: object
          description: The business that was rated.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        event:
          type: object
          description: The event that was rated.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
        place:
          type: object
          description: The place that was rated.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: The user who gave the rating.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Reservation:
      type: object
      properties:
        date:
          type: string
          description: Date holds the value of the "date" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the ReservationQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.ReservationEdges'
        id:
          type: string
          description: ID of the ent.
        numberOfPeople:
          type: integer
          description: NumberOfPeople holds the value of the "numberOfPeople" field.
        status:
          type: string
          description: Status holds the value of the "status" field.
        time:
          type: string
          description: Time holds the value of the "time" field.
    placio-app_ent.ReservationEdges:
      type: object
      properties:
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Review:
      type: object
      properties:
        content:
          type: string
          description: User's review to the business/place/event.
        createdAt:
          type: string
          description: When the review was created.
        dislikeCount:
          type: integer
          description: Count of dislikes for this review.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the ReviewQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.ReviewEdges'
        flag:
          type: string
          description: Flag for this review.
        id:
          type: string
          description: ID of the ent.
        likeCount:
          type: integer
          description: Count of likes for this review.
        score:
          type: number
          description: Score should be between 1 and 5.
    placio-app_ent.ReviewEdges:
      type: object
      properties:
        business:
          type: object
          description: The business that was reviewed.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        comments:
          type: array
          description: The comments related to the review.
          items:
            $ref: '#/components/schemas/placio-app_ent.Comment'
        event:
          type: object
          description: The event that was reviewed.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
        likes:
          type: array
          description: The likes related to the review.
          items:
            $ref: '#/components/schemas/placio-app_ent.Like'
        medias:
          type: array
          description: The media content related to the review.
          items:
            $ref: '#/components/schemas/placio-app_ent.Media'
        place:
          type: object
          description: The place that was reviewed.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: The user who wrote the review.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.Room:
      type: object
      properties:
        availability:
          type: boolean
          description: Availability holds the value of the "availability" field.
        description:
          type: string
          description: Description holds the value of the "description" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the RoomQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.RoomEdges'
        id:
          type: string
          description: ID of the ent.
        image:
          type: string
          description: Image holds the value of the "image" field.
        number:
          type: string
          description: Number holds the value of the "number" field.
        price:
          type: number
          description: Price holds the value of the "price" field.
        type:
          type: string
          description: Type holds the value of the "type" field.
    placio-app_ent.RoomEdges:
      type: object
      properties:
        bookings:
          type: array
          description: Bookings holds the value of the bookings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Booking'
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
    placio-app_ent.Ticket:
      type: object
      properties:
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the TicketQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.TicketEdges'
        id:
          type: string
          description: ID of the ent.
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
    placio-app_ent.TicketEdges:
      type: object
      properties:
        event:
          type: object
          description: Event holds the value of the event edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
        ticket_options:
          type: array
          description: TicketOptions holds the value of the ticket_options edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.TicketOption'
    placio-app_ent.TicketOption:
      type: object
      properties:
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the TicketOptionQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.TicketOptionEdges'
        id:
          type: string
          description: ID of the ent.
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
    placio-app_ent.TicketOptionEdges:
      type: object
      properties:
        event:
          type: object
          description: Event holds the value of the event edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
    placio-app_ent.User:
      type: object
      properties:
        app_settings:
          type: object
          properties: {}
          description: AppSettings holds the value of the "app_settings" field.
        auth0_data:
          type: object
          description: Auth0Data holds the value of the "auth0_data" field.
          allOf:
            - $ref: '#/components/schemas/management.User'
        auth0_id:
          type: string
          description: Auth0ID holds the value of the "auth0_id" field.
        bio:
          type: string
          description: Bio holds the value of the "bio" field.
        cover_image:
          type: string
          description: CoverImage holds the value of the "cover_image" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserEdges'
        id:
          type: string
          description: ID of the ent.
        latitude:
          type: string
          description: Latitude holds the value of the "latitude" field.
        location:
          type: string
          description: Location holds the value of the "location" field.
        longitude:
          type: string
          description: Longitude holds the value of the "longitude" field.
        map_coordinates:
          type: object
          properties: {}
          description: MapCoordinates holds the value of the "map_coordinates" field.
        name:
          type: string
          description: Name holds the value of the "name" field.
        picture:
          type: string
          description: Picture holds the value of the "picture" field.
        relevance_score:
          type: number
          description: RelevanceScore holds the value of the "relevance_score" field.
        search_text:
          type: string
          description: SearchText holds the value of the "search_text" field.
        user_settings:
          type: object
          properties: {}
          description: UserSettings holds the value of the "user_settings" field.
        username:
          type: string
          description: Username holds the value of the "username" field.
        website:
          type: string
          description: Website holds the value of the "website" field.
    placio-app_ent.UserBusiness:
      type: object
      properties:
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserBusinessQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserBusinessEdges'
        id:
          type: string
          description: ID of the ent.
        permissions:
          type: string
          description: Permissions holds the value of the "permissions" field.
        role:
          type: string
          description: Role holds the value of the "role" field.
    placio-app_ent.UserBusinessEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.UserEdges:
      type: object
      properties:
        bookings:
          type: array
          description: Bookings holds the value of the bookings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Booking'
        categories:
          type: array
          description: Categories holds the value of the categories edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Category'
        categoryAssignments:
          type: array
          description: CategoryAssignments holds the value of the categoryAssignments
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.CategoryAssignment'
        comments:
          type: array
          description: Comments holds the value of the comments edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Comment'
        followedBusinesses:
          type: array
          description: FollowedBusinesses holds the value of the followedBusinesses
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowBusiness'
        followedPlaces:
          type: array
          description: FollowedPlaces holds the value of the followedPlaces edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowPlace'
        followedUsers:
          type: array
          description: FollowedUsers holds the value of the followedUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowUser'
        followerBusinesses:
          type: array
          description: FollowerBusinesses holds the value of the followerBusinesses
            edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.BusinessFollowUser'
        followerUsers:
          type: array
          description: FollowerUsers holds the value of the followerUsers edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowUser'
        helps:
          type: array
          description: Helps holds the value of the helps edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Help'
        likedPlaces:
          type: array
          description: LikedPlaces holds the value of the likedPlaces edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserLikePlace'
        likes:
          type: array
          description: Likes holds the value of the likes edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Like'
        ownedEvents:
          type: object
          description: OwnedEvents holds the value of the ownedEvents edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
        places:
          type: array
          description: Places holds the value of the places edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Place'
        posts:
          type: array
          description: Posts holds the value of the posts edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Post'
        ratings:
          type: array
          description: Ratings holds the value of the ratings edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Rating'
        reservations:
          type: array
          description: Reservations holds the value of the reservations edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Reservation'
        reviews:
          type: array
          description: Reviews holds the value of the reviews edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.Review'
        userBusinesses:
          type: array
          description: UserBusinesses holds the value of the userBusinesses edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserBusiness'
        userFollowEvents:
          type: array
          description: UserFollowEvents holds the value of the userFollowEvents edge.
          items:
            $ref: '#/components/schemas/placio-app_ent.UserFollowEvent'
    placio-app_ent.UserFollowBusiness:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserFollowBusinessQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserFollowBusinessEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.UserFollowBusinessEdges:
      type: object
      properties:
        business:
          type: object
          description: Business holds the value of the business edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Business'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.UserFollowEvent:
      type: object
      properties:
        createdAt:
          type: string
          description: CreatedAt holds the value of the "createdAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserFollowEventQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserFollowEventEdges'
        id:
          type: string
          description: ID of the ent.
        updatedAt:
          type: string
          description: UpdatedAt holds the value of the "updatedAt" field.
    placio-app_ent.UserFollowEventEdges:
      type: object
      properties:
        event:
          type: object
          description: Event holds the value of the event edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Event'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.UserFollowPlace:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserFollowPlaceQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserFollowPlaceEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.UserFollowPlaceEdges:
      type: object
      properties:
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.UserFollowUser:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserFollowUserQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserFollowUserEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.UserFollowUserEdges:
      type: object
      properties:
        followed:
          type: object
          description: Followed holds the value of the followed edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
        follower:
          type: object
          description: Follower holds the value of the follower edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent.UserLikePlace:
      type: object
      properties:
        CreatedAt:
          type: string
          description: CreatedAt holds the value of the "CreatedAt" field.
        UpdatedAt:
          type: string
          description: UpdatedAt holds the value of the "UpdatedAt" field.
        edges:
          type: object
          description: |-
            Edges holds the relations/edges for other nodes in the graph.
            The values are being populated by the UserLikePlaceQuery when eager-loading is set.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.UserLikePlaceEdges'
        id:
          type: string
          description: ID of the ent.
    placio-app_ent.UserLikePlaceEdges:
      type: object
      properties:
        place:
          type: object
          description: Place holds the value of the place edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.Place'
        user:
          type: object
          description: User holds the value of the user edge.
          allOf:
            - $ref: '#/components/schemas/placio-app_ent.User'
    placio-app_ent_event.EventType:
      type: string
      enum:
        - event
        - place
        - business
        - free
        - paid
      x-enum-varnames:
        - EventTypeEvent
        - EventTypePlace
        - EventTypeBusiness
        - EventTypeFree
        - EventTypePaid
    placio-app_ent_event.Frequency:
      type: string
      enum:
        - once
        - daily
        - weekly
        - monthly
        - yearly
      x-enum-varnames:
        - FrequencyOnce
        - FrequencyDaily
        - FrequencyWeekly
        - FrequencyMonthly
        - FrequencyYearly
    placio-app_ent_event.VenueType:
      type: string
      enum:
        - online
        - in_person
        - hybrid
      x-enum-varnames:
        - VenueTypeOnline
        - VenueTypeInPerson
        - VenueTypeHybrid
    placio-app_ent_post.Privacy:
      type: string
      enum:
        - Public
        - Public
        - FollowersOnly
        - OnlyMe
      x-enum-varnames:
        - DefaultPrivacy
        - PrivacyPublic
        - PrivacyFollowersOnly
        - PrivacyOnlyMe
    placio-app_models.AccountSettings:
      type: object
      properties:
        accountID:
          type: string
        blockedUsers:
          type: array
          items:
            type: string
        businessAccountID:
          type: string
        id:
          type: string
        mutedUsers:
          type: array
          items:
            type: string
        twoFactorAuthentication:
          type: boolean
    placio-app_models.AppMetadata:
      type: object
      properties:
        CommentNotifications:
          type: boolean
        DirectMessageNotifications:
          type: boolean
        EmailNotifications:
          type: boolean
        FollowNotifications:
          type: boolean
        LikeNotifications:
          type: boolean
        MentionNotifications:
          type: boolean
        PushNotifications:
          type: boolean
    placio-app_models.Attendee:
      type: object
      properties:
        attended:
          type: boolean
        createdAt:
          type: string
        eventID:
          type: string
        id:
          type: string
        ticketID:
          type: string
        updatedAt:
          type: string
        userID:
          type: string
    placio-app_models.Auth0UserData:
      type: object
      properties:
        app_metadata:
          $ref: '#/components/schemas/placio-app_models.AppMetadata'
        blocked:
          type: boolean
        client_id:
          type: string
        connection:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        family_name:
          type: string
        given_name:
          type: string
        name:
          type: string
        nickname:
          type: string
        password:
          type: string
        phone_number:
          type: string
        phone_verified:
          type: boolean
        picture:
          type: string
        user_metadata:
          $ref: '#/components/schemas/placio-app_models.Metadata'
        username:
          type: string
        verify_email:
          type: boolean
        verify_phone_number:
          type: boolean
    placio-app_models.BusinessAccount:
      type: object
      properties:
        accountSettings:
          $ref: '#/components/schemas/placio-app_models.AccountSettings'
        active:
          type: boolean
        createdAt:
          type: string
        deleteAt:
          $ref: '#/components/schemas/gorm.DeletedAt'
        id:
          type: string
          description: gorm.Model
        name:
          type: string
        posts:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Post'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.UserBusinessRelationship'
        updatedAt:
          type: string
    placio-app_models.Comment:
      type: object
      properties:
        content:
          type: string
        createdAt:
          type: string
        id:
          type: string
        postID:
          type: string
        updatedAt:
          type: string
        userID:
          type: string
    placio-app_models.Content:
      type: object
      properties:
        AutoplayVideos:
          type: boolean
        DefaultPostPrivacy:
          type: string
        DisplaySensitiveMedia:
          type: boolean
        ExplicitContentFilter:
          type: string
        MediaVisibility:
          type: string
    placio-app_models.Like:
      type: object
      properties:
        createdAt:
          type: string
        id:
          type: string
        postID:
          type: string
        updatedAt:
          type: string
        userId:
          type: string
    placio-app_models.Media:
      type: object
      properties:
        createdAt:
          type: string
        id:
          type: string
        mediaType:
          type: string
          description: '"image", "gif", or "video"'
        postID:
          type: string
        updatedAt:
          type: string
        url:
          type: string
    placio-app_models.Metadata:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/placio-app_models.Content'
        CreatedAt:
          type: string
        DeletedAt:
          type: object
        Language:
          type: string
        Privacy:
          type: string
        Theme:
          type: string
        UpdatedAt:
          type: string
    placio-app_models.Post:
      type: object
      properties:
        businessAccountID:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Comment'
        content:
          type: string
        createdAt:
          type: string
        id:
          type: string
        likes:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Like'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Media'
        updatedAt:
          type: string
        userID:
          type: string
          description: AccountID string    `gorm:"index;foreignKey:ID"`
    placio-app_models.Rating:
      type: object
      properties:
        createdAt:
          type: string
        eventID:
          type: string
        id:
          type: string
        review:
          type: string
        score:
          type: integer
        updatedAt:
          type: string
        userID:
          type: string
    placio-app_models.Ticket:
      type: object
      properties:
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Attendee'
        createdAt:
          type: string
        eventID:
          type: string
        id:
          type: string
        name:
          type: string
        price:
          type: integer
        ratings:
          type: array
          description: Comments      []Comment      `gorm:"foreignKey:EventID"`
          items:
            $ref: '#/components/schemas/placio-app_models.Rating'
        ticketOptions:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.TicketOption'
        updatedAt:
          type: string
    placio-app_models.TicketOption:
      type: object
      properties:
        createdAt:
          type: string
        eventID:
          type: string
        id:
          type: string
        name:
          type: string
        price:
          type: number
        quantity:
          type: integer
        updatedAt:
          type: string
    placio-app_models.User:
      type: object
      properties:
        auth0Data:
          $ref: '#/components/schemas/management.User'
        auth0ID:
          type: string
        createdAt:
          type: string
        deleteAt:
          $ref: '#/components/schemas/gorm.DeletedAt'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.Post'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/placio-app_models.UserBusinessRelationship'
        updatedAt:
          type: string
        userID:
          type: string
          description: gorm.Model
    placio-app_models.UserBusinessRelationship:
      type: object
      properties:
        businessAccount:
          $ref: '#/components/schemas/placio-app_models.BusinessAccount'
        businessAccountID:
          type: string
        createdAt:
          type: string
        deleteAt:
          $ref: '#/components/schemas/gorm.DeletedAt'
        id:
          type: string
        role:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/placio-app_models.User'
        userID:
          type: string
