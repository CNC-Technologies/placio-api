basePath: /qpi/v1
definitions:
  fiber.Map:
    additionalProperties: true
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  management.User:
    properties:
      app_metadata:
        additionalProperties: true
        description: |-
          AppMetadata holds data that the user has read-only access to.
          For example roles, permissions, vip, etc.
          NOTE: Roles added to AppMetadata are not integrated with Auth0 Role-Based Access Control (RBAC).
          For RBAC, see the functions User.Roles, User.AssignRoles, and User.RemoveRoles.
        type: object
      blocked:
        description: True if the user is blocked from the application, false if the user is enabled.
        type: boolean
      client_id:
        description: Auth0 client ID. Only valid when updating email address.
        type: string
      connection:
        description: The connection the user belongs to.
        type: string
      created_at:
        description: The time the user was created.
        type: string
      description:
        description: The user-defined UTF-8 string describing their account.
        type: string
      email:
        description: The users' email.
        type: string
      family_name:
        description: The users' family name.
        type: string
      given_name:
        description: The users' given name.
        type: string
      identities:
        description: Identities is a list of user identities for when accounts are linked.
        items:
          $ref: '#/definitions/management.UserIdentity'
        type: array
      last_ip:
        description: Last IP address from which this user logged in. Read only, cannot be modified.
        type: string
      last_login:
        description: The last time the user has logged in.
        type: string
      last_password_reset:
        description: |-
          The last time the user had their password reset.
          Only available for Database connection users.
        type: string
      location:
        description: The user-defined location for this accountâ€™s profile.
        type: string
      logins_count:
        description: Total number of logins this user has performed. Read only, cannot be modified.
        type: integer
      multifactor:
        description: List of multi-factor authentication providers with which this user has enrolled.
        items:
          type: string
        type: array
      name:
        description: The users' name.
        type: string
      nickname:
        description: The users' nickname.
        type: string
      password:
        description: The users' password (mandatory for non SMS connections)
        type: string
      phone_number:
        description: |-
          The users' phone number (following the E.164 recommendation).
          Only valid for users to be added to SMS connections.
        type: string
      phone_verified:
        description: |-
          True if the user's phone number is verified, false otherwise. When the
          user is added to an SMS connection, they will not receive a verification
          SMS if this is true.
        type: boolean
      picture:
        description: The user's picture url.
        type: string
      screen_name:
        description: The screen name, handle, or alias that this user identifies themselves with.
        type: string
      updated_at:
        description: The last time the user was updated.
        type: string
      url:
        description: A URL provided by the user in association with their profile.
        type: string
      user_id:
        description: The users' identifier.
        type: string
      user_metadata:
        additionalProperties: true
        description: |-
          UserMetadata holds data that the user has read/write access to.
          For example color_preference, blog_url, etc.
        type: object
      username:
        description: The users' username. Only valid if the connection requires a username.
        type: string
      verify_email:
        description: |-
          If true, the user will receive a verification email after creation, even
          if created with email_verified set to true. If false, the user will not
          receive a verification email, even if created with email_verified set to
          false. If unspecified, defaults to the behavior determined by the value
          of email_verified.
        type: boolean
    type: object
  management.UserIdentity:
    properties:
      access_token:
        type: string
      access_token_secret:
        type: string
      connection:
        type: string
      isSocial:
        type: boolean
      profileData:
        additionalProperties: true
        type: object
      provider:
        type: string
      refresh_token:
        type: string
    type: object
  placio-app_Dto.ErrorDTO:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.EventDto:
    properties:
      date:
        type: string
      name:
        type: string
      time:
        type: string
    required:
      - date
      - name
      - time
    type: object
  placio-app_Dto.MediaDto:
    properties:
      type:
        type: string
      url:
        type: string
    type: object
  placio-app_Dto.PermissionDTO:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_Dto.PostDto:
    properties:
      business_id:
        description: It can be empty if it does not exist
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/placio-app_Dto.MediaDto'
        type: array
      user_id:
        type: string
    type: object
  placio-app_Dto.PostResponseDto:
    properties:
      business:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Business'
        description: It can be empty if it does not exist
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/placio-app_Dto.MediaDto'
        type: array
      user:
        $ref: '#/definitions/placio-app_ent.User'
    type: object
  placio-app_Dto.SuccessDTO:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  placio-app_ent.AccountSettings:
    properties:
      BlockedUsers:
        description: BlockedUsers holds the value of the "BlockedUsers" field.
        items:
          type: string
        type: array
      MutedUsers:
        description: MutedUsers holds the value of the "MutedUsers" field.
        items:
          type: string
        type: array
      TwoFactorAuthentication:
        description: TwoFactorAuthentication holds the value of the "TwoFactorAuthentication" field.
        type: boolean
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.AccountSettingsEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AccountSettingsQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.AccountSettingsEdges:
    properties:
      business_account:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Business'
        description: BusinessAccount holds the value of the business_account edge.
    type: object
  placio-app_ent.Business:
    properties:
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.BusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BusinessQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  placio-app_ent.BusinessEdges:
    properties:
      business_account_settings:
        allOf:
          - $ref: '#/definitions/placio-app_ent.AccountSettings'
        description: BusinessAccountSettings holds the value of the business_account_settings edge.
      posts:
        description: Posts holds the value of the posts edge.
        items:
          $ref: '#/definitions/placio-app_ent.Post'
        type: array
      userBusinesses:
        description: UserBusinesses holds the value of the userBusinesses edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserBusiness'
        type: array
    type: object
  placio-app_ent.Comment:
    properties:
      Content:
        description: Content holds the value of the "Content" field.
        type: string
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.CommentEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CommentQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.CommentEdges:
    properties:
      post:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
      user:
        allOf:
          - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Like:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.LikeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LikeQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.LikeEdges:
    properties:
      post:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
      user:
        allOf:
          - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.Media:
    properties:
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      MediaType:
        description: image, gif, or video
        type: string
      URL:
        description: URL holds the value of the "URL" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.MediaEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MediaQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.MediaEdges:
    properties:
      post:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Post'
        description: Post holds the value of the post edge.
    type: object
  placio-app_ent.Post:
    properties:
      Content:
        description: Content holds the value of the "Content" field.
        type: string
      CreatedAt:
        description: CreatedAt holds the value of the "CreatedAt" field.
        type: string
      UpdatedAt:
        description: UpdatedAt holds the value of the "UpdatedAt" field.
        type: string
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.PostEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PostQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.PostEdges:
    properties:
      business_account:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Business'
        description: BusinessAccount holds the value of the business_account edge.
      comments:
        description: Comments holds the value of the comments edge.
        items:
          $ref: '#/definitions/placio-app_ent.Comment'
        type: array
      likes:
        description: Likes holds the value of the likes edge.
        items:
          $ref: '#/definitions/placio-app_ent.Like'
        type: array
      medias:
        description: Medias holds the value of the medias edge.
        items:
          $ref: '#/definitions/placio-app_ent.Media'
        type: array
      user:
        allOf:
          - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.User:
    properties:
      auth0_data:
        allOf:
          - $ref: '#/definitions/management.User'
        description: Auth0Data holds the value of the "auth0_data" field.
      auth0_id:
        description: Auth0ID holds the value of the "auth0_id" field.
        type: string
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
    type: object
  placio-app_ent.UserBusiness:
    properties:
      edges:
        allOf:
          - $ref: '#/definitions/placio-app_ent.UserBusinessEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserBusinessQuery when eager-loading is set.
      id:
        description: ID of the ent.
        type: string
      role:
        description: Role holds the value of the "role" field.
        type: string
    type: object
  placio-app_ent.UserBusinessEdges:
    properties:
      business:
        allOf:
          - $ref: '#/definitions/placio-app_ent.Business'
        description: Business holds the value of the business edge.
      user:
        allOf:
          - $ref: '#/definitions/placio-app_ent.User'
        description: User holds the value of the user edge.
    type: object
  placio-app_ent.UserEdges:
    properties:
      comments:
        description: Comments holds the value of the comments edge.
        items:
          $ref: '#/definitions/placio-app_ent.Comment'
        type: array
      likes:
        description: Likes holds the value of the likes edge.
        items:
          $ref: '#/definitions/placio-app_ent.Like'
        type: array
      posts:
        description: Posts holds the value of the posts edge.
        items:
          $ref: '#/definitions/placio-app_ent.Post'
        type: array
      userBusinesses:
        description: UserBusinesses holds the value of the userBusinesses edge.
        items:
          $ref: '#/definitions/placio-app_ent.UserBusiness'
        type: array
    type: object
  placio-app_models.AccountSettings:
    properties:
      accountID:
        type: string
      blockedUsers:
        items:
          type: string
        type: array
      businessAccountID:
        type: string
      id:
        type: string
      mutedUsers:
        items:
          type: string
        type: array
      twoFactorAuthentication:
        type: boolean
    type: object
  placio-app_models.AppMetadata:
    properties:
      CommentNotifications:
        type: boolean
      DirectMessageNotifications:
        type: boolean
      EmailNotifications:
        type: boolean
      FollowNotifications:
        type: boolean
      LikeNotifications:
        type: boolean
      MentionNotifications:
        type: boolean
      PushNotifications:
        type: boolean
    type: object
  placio-app_models.Attendee:
    properties:
      attended:
        type: boolean
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      ticketID:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Auth0UserData:
    properties:
      app_metadata:
        $ref: '#/definitions/placio-app_models.AppMetadata'
      blocked:
        type: boolean
      client_id:
        type: string
      connection:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      family_name:
        type: string
      given_name:
        type: string
      name:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone_number:
        type: string
      phone_verified:
        type: boolean
      picture:
        type: string
      user_metadata:
        $ref: '#/definitions/placio-app_models.Metadata'
      username:
        type: string
      verify_email:
        type: boolean
      verify_phone_number:
        type: boolean
    type: object
  placio-app_models.BusinessAccount:
    properties:
      accountSettings:
        $ref: '#/definitions/placio-app_models.AccountSettings'
      active:
        type: boolean
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        description: gorm.Model
        type: string
      name:
        type: string
      posts:
        items:
          $ref: '#/definitions/placio-app_models.Post'
        type: array
      relationships:
        items:
          $ref: '#/definitions/placio-app_models.UserBusinessRelationship'
        type: array
      updatedAt:
        type: string
    type: object
  placio-app_models.Comment:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Content:
    properties:
      AutoplayVideos:
        type: boolean
      DefaultPostPrivacy:
        type: string
      DisplaySensitiveMedia:
        type: boolean
      ExplicitContentFilter:
        type: string
      MediaVisibility:
        type: string
    type: object
  placio-app_models.Event:
    properties:
      accountID:
        description: Foreign key to Account
        type: string
      address:
        type: string
      capacity:
        type: integer
      category:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      date:
        type: string
      description:
        type: string
      endDate:
        type: string
      endTime:
        type: string
      id:
        type: string
      imageURL:
        type: string
      isFree:
        type: boolean
      isOnline:
        type: boolean
      isPublic:
        type: boolean
      location:
        type: string
      name:
        type: string
      organizer:
        type: string
      organizerEmail:
        type: string
      organizerPhone:
        type: string
      priceRange:
        type: string
      state:
        type: string
      tags:
        items:
          type: string
        type: array
      ticketURL:
        type: string
      time:
        type: string
      updatedAt:
        type: string
      website:
        type: string
    type: object
  placio-app_models.Like:
    properties:
      createdAt:
        type: string
      id:
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  placio-app_models.Media:
    properties:
      createdAt:
        type: string
      id:
        type: string
      mediaType:
        description: '"image", "gif", or "video"'
        type: string
      postID:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  placio-app_models.Metadata:
    properties:
      Content:
        $ref: '#/definitions/placio-app_models.Content'
      CreatedAt:
        type: string
      DeletedAt: {}
      Language:
        type: string
      Privacy:
        type: string
      Theme:
        type: string
      UpdatedAt:
        type: string
    type: object
  placio-app_models.Post:
    properties:
      businessAccountID:
        type: string
      comments:
        items:
          $ref: '#/definitions/placio-app_models.Comment'
        type: array
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      likes:
        items:
          $ref: '#/definitions/placio-app_models.Like'
        type: array
      medias:
        items:
          $ref: '#/definitions/placio-app_models.Media'
        type: array
      updatedAt:
        type: string
      userID:
        description: AccountID string    `gorm:"index;foreignKey:ID"`
        type: string
    type: object
  placio-app_models.Rating:
    properties:
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      review:
        type: string
      score:
        type: integer
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  placio-app_models.Ticket:
    properties:
      attendees:
        items:
          $ref: '#/definitions/placio-app_models.Attendee'
        type: array
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      ratings:
        description: Comments      []Comment      `gorm:"foreignKey:EventID"`
        items:
          $ref: '#/definitions/placio-app_models.Rating'
        type: array
      ticketOptions:
        items:
          $ref: '#/definitions/placio-app_models.TicketOption'
        type: array
      updatedAt:
        type: string
    type: object
  placio-app_models.TicketOption:
    properties:
      createdAt:
        type: string
      eventID:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
  placio-app_models.User:
    properties:
      auth0Data:
        $ref: '#/definitions/management.User'
      auth0ID:
        type: string
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      posts:
        items:
          $ref: '#/definitions/placio-app_models.Post'
        type: array
      relationships:
        items:
          $ref: '#/definitions/placio-app_models.UserBusinessRelationship'
        type: array
      updatedAt:
        type: string
      userID:
        description: gorm.Model
        type: string
    type: object
  placio-app_models.UserBusinessRelationship:
    properties:
      businessAccount:
        $ref: '#/definitions/placio-app_models.BusinessAccount'
      businessAccountID:
        type: string
      createdAt:
        type: string
      deleteAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/placio-app_models.User'
      userID:
        type: string
    type: object
host: https://api.palnight.com
info:
  contact:
    email: support@placio.io
    name: Darc Technologies
    url: https://placio.io
  description: This is the documentation for the Placio Application Api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://placio.io/terms
  title: Placio Application Api
  version: '0.01'
paths:
  /api/v1/attendees/:
    post:
      consumes:
        - application/json
      description: Add an attendee to the specified event
      parameters:
        - description: Attendee Data
          in: body
          name: AddAttendeeDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully added attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Add attendee to an event
      tags:
        - Attendee
  /api/v1/attendees/{id}:
    delete:
      consumes:
        - application/json
      description: Remove an attendee from the specified event by their ID
      parameters:
        - description: Attendee ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully removed attendee
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Remove attendee from an event
      tags:
        - Attendee
    get:
      consumes:
        - application/json
      description: Get attendee details by their ID
      parameters:
        - description: Attendee ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get attendee by ID
      tags:
        - Attendee
    put:
      consumes:
        - application/json
      description: Update an attendee's details by their ID
      parameters:
        - description: Attendee ID
          in: path
          name: id
          required: true
          type: string
        - description: Attendee Data
          in: body
          name: UpdateAttendeeDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated attendee
          schema:
            $ref: '#/definitions/placio-app_models.Attendee'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Attendee Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update attendee details
      tags:
        - Attendee
  /api/v1/comments/:
    post:
      consumes:
        - application/json
      description: Create a new comment for the specified post
      parameters:
        - description: Comment Data
          in: body
          name: CreateCommentDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Comment'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created comment
          schema:
            $ref: '#/definitions/placio-app_models.Comment'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new comment
      tags:
        - Comment
  /api/v1/comments/{commentID}:
    delete:
      description: Delete a comment by its ID
      parameters:
        - description: Comment ID
          in: path
          name: commentID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully deleted comment
        '404':
          description: Comment Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete a comment
      tags:
        - Comment
    get:
      description: Retrieve a comment by its ID
      parameters:
        - description: Comment ID
          in: path
          name: commentID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved comment
          schema:
            $ref: '#/definitions/placio-app_models.Comment'
        '404':
          description: Comment Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get a comment
      tags:
        - Comment
    put:
      consumes:
        - application/json
      description: Update a comment by its ID
      parameters:
        - description: Comment ID
          in: path
          name: commentID
          required: true
          type: string
        - description: Comment Data
          in: body
          name: UpdateCommentDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Comment'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated comment
          schema:
            $ref: '#/definitions/placio-app_models.Comment'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Comment Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update a comment
      tags:
        - Comment
  /api/v1/comments/post/{postID}:
    get:
      description: Retrieve all comments for the specified post
      parameters:
        - description: Post ID
          in: path
          name: postID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved comments
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Comment'
            type: array
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: List all comments for a post
      tags:
        - Comment
  /api/v1/events/{eventId}/attendees:
    get:
      consumes:
        - application/json
      description: Get all attendees for a specific event by event ID
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved attendees
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Attendee'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get attendees by event
      tags:
        - Attendee
  /api/v1/events/{eventId}/ticket-options:
    get:
      consumes:
        - application/json
      description: GET all ticket options for an event by its ID
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved ticket options for event
          schema:
            items:
              $ref: '#/definitions/placio-app_models.TicketOption'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket options by event ID
      tags:
        - TicketOption
  /api/v1/health:
    get:
      consumes:
        - '*/*'
      description: get the status of server.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
        - root
  /api/v1/likes/{postID}:
    delete:
      consumes:
        - application/json
      description: Remove a like from a post
      parameters:
        - description: Post ID
          in: path
          name: postID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully unliked post
          schema:
            $ref: '#/definitions/fiber.Map'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Unlike a post
      tags:
        - Likes
    post:
      consumes:
        - application/json
      description: Add a like to a post
      parameters:
        - description: Post ID
          in: path
          name: postID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Successfully liked post
          schema:
            $ref: '#/definitions/fiber.Map'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Like a post
      tags:
        - Likes
  /api/v1/likes/{postID}/count:
    get:
      description: Retrieve the number of likes for a post
      parameters:
        - description: Post ID
          in: path
          name: postID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved like count
          schema:
            $ref: '#/definitions/fiber.Map'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET like count for a post
      tags:
        - Likes
  /api/v1/posts/:
    post:
      consumes:
        - application/json
      description: Create a new post for the authenticated user
      parameters:
        - description: Post Data
          in: body
          name: CreatePostDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_Dto.PostDto'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created post
          schema:
            $ref: '#/definitions/placio-app_Dto.PostResponseDto'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Create a new post
      tags:
        - Post
  /api/v1/ratings/:
    post:
      consumes:
        - application/json
      description: Create a new rating for the specified event
      parameters:
        - description: Rating Data
          in: body
          name: CreateRatingDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Rating'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created rating
          schema:
            $ref: '#/definitions/placio-app_models.Rating'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new rating
      tags:
        - Rating
  /api/v1/ratings/{id}:
    delete:
      consumes:
        - application/json
      description: Delete a rating by its ID
      parameters:
        - description: Rating ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully deleted rating
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete rating by ID
      tags:
        - Rating
    get:
      consumes:
        - application/json
      description: Retrieve a rating by its ID
      parameters:
        - description: Rating ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved rating
          schema:
            $ref: '#/definitions/placio-app_models.Rating'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET rating by ID
      tags:
        - Rating
    put:
      consumes:
        - application/json
      description: Update a rating by its ID
      parameters:
        - description: Rating ID
          in: path
          name: id
          required: true
          type: string
        - description: Rating Data
          in: body
          name: UpdateRatingDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Rating'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated rating
          schema:
            $ref: '#/definitions/placio-app_models.Rating'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Rating Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update rating by ID
      tags:
        - Rating
  /api/v1/ratings/event/{eventID}:
    get:
      consumes:
        - application/json
      description: Retrieve all ratings for a given event
      parameters:
        - description: Event ID
          in: path
          name: eventID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved ratings
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Rating'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET all ratings for an event
      tags:
        - Rating
  /api/v1/ticket-options/:
    post:
      consumes:
        - application/json
      description: Create a new ticket option for the specified event
      parameters:
        - description: Ticket Option Data
          in: body
          name: CreateTicketOptionDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new ticket option
      tags:
        - TicketOption
  /api/v1/ticket-options/{id}:
    delete:
      consumes:
        - application/json
      description: Delete a ticket option by its ID
      parameters:
        - description: Ticket Option ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully deleted ticket option
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete ticket option by ID
      tags:
        - TicketOption
    get:
      consumes:
        - application/json
      description: GET a ticket option by its ID
      parameters:
        - description: Ticket Option ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket option by ID
      tags:
        - TicketOption
    put:
      consumes:
        - application/json
      description: Update a ticket option by its ID
      parameters:
        - description: Ticket Option ID
          in: path
          name: id
          required: true
          type: string
        - description: Ticket Option Data
          in: body
          name: UpdateTicketOptionDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated ticket option
          schema:
            $ref: '#/definitions/placio-app_models.TicketOption'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Ticket Option Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update ticket option by ID
      tags:
        - TicketOption
  /api/v1/tickets/:
    post:
      consumes:
        - application/json
      description: Create a new ticket for the specified event
      parameters:
        - description: Ticket Data
          in: body
          name: CreateTicketDto
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Ticket'
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created ticket
          schema:
            $ref: '#/definitions/placio-app_models.Ticket'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create a new ticket
      tags:
        - Ticket
  /api/v1/tickets/{id}:
    delete:
      consumes:
        - application/json
      description: Delete a ticket by its ID
      parameters:
        - description: Ticket ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully deleted ticket
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Ticket Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete ticket by ID
      tags:
        - Ticket
    get:
      consumes:
        - application/json
      description: GET a ticket by its ID
      parameters:
        - description: Ticket ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved ticket
          schema:
            $ref: '#/definitions/placio-app_models.Ticket'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '404':
          description: Ticket Not Found
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET ticket by ID
      tags:
        - Ticket
  /api/v1/tickets/event/{eventId}:
    get:
      consumes:
        - application/json
      description: GET all tickets for a specific event
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved tickets
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Ticket'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: GET tickets by event ID
      tags:
        - Ticket
  /api/v1/users/:
    get:
      consumes:
        - application/json
      description: Get a user's details by their Auth0 ID
      parameters:
        - description: User Auth0 ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/placio-app_models.User'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Get a user's details
      tags:
        - User
  /api/v1/users/{id}/appdata:
    patch:
      consumes:
        - application/json
      description: Update a user's app metadata by their Auth0 ID
      parameters:
        - description: User Auth0 ID
          in: path
          name: id
          required: true
          type: string
        - description: App metadata to update
          in: body
          name: appData
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.AppMetadata'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated app metadata
          schema:
            $ref: '#/definitions/placio-app_models.User'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Update a user's app metadata
      tags:
        - User
  /api/v1/users/{id}/business-accounts:
    get:
      consumes:
        - application/json
      description: Get all business accounts associated with a specific user
      parameters:
        - description: User ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved business accounts
          schema:
            items:
              $ref: '#/definitions/placio-app_models.BusinessAccount'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Get all business accounts for a user
      tags:
        - User
  /api/v1/users/{id}/metadata:
    patch:
      consumes:
        - application/json
      description: Update a user's metadata by their Auth0 ID
      parameters:
        - description: User Auth0 ID
          in: path
          name: id
          required: true
          type: string
        - description: User metadata to update
          in: body
          name: userMetaData
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Metadata'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated user metadata
          schema:
            $ref: '#/definitions/placio-app_models.User'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Update a user's metadata
      tags:
        - User
  /api/v1/users/{id}/userinfo:
    patch:
      consumes:
        - application/json
      description: Update a user's information by their Auth0 ID
      parameters:
        - description: User Auth0 ID
          in: path
          name: id
          required: true
          type: string
        - description: User data to update
          in: body
          name: userData
          required: true
          schema:
            $ref: '#/definitions/placio-app_models.Auth0UserData'
      produces:
        - application/json
      responses:
        '200':
          description: Successfully updated user information
          schema:
            $ref: '#/definitions/placio-app_models.User'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Update a user's information
      tags:
        - User
  /api/v1/users/{userID}/business-account/{businessAccountID}/association:
    delete:
      consumes:
        - application/json
      description: Remove a user's association with a specific business account
      parameters:
        - description: User ID
          in: path
          name: userID
          required: true
          type: integer
        - description: Business Account ID
          in: path
          name: businessAccountID
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '204':
          description: Successfully removed user's association with business account
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Remove a user's association with a business account
      tags:
        - User
    post:
      consumes:
        - application/json
      description: Associate a user with a specific business account
      parameters:
        - description: User ID
          in: path
          name: userID
          required: true
          type: integer
        - description: Business Account ID
          in: path
          name: businessAccountID
          required: true
          type: integer
        - description: Role
          in: body
          name: role
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        '204':
          description: Successfully associated user with business account
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Associate a user with a business account
      tags:
        - User
  /api/v1/users/{userID}/business-account/{businessAccountID}/can-perform-action:
    post:
      consumes:
        - application/json
      description: Check if a user can perform a certain action based on their role in the business account
      parameters:
        - description: User ID
          in: path
          name: userID
          required: true
          type: integer
        - description: Business Account ID
          in: path
          name: businessAccountID
          required: true
          type: integer
        - description: Action
          in: body
          name: action
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully checked permission
          schema:
            $ref: '#/definitions/placio-app_Dto.PermissionDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Check if a user can perform an action
      tags:
        - User
  /api/v1/users/{userID}/business-accounts:
    get:
      consumes:
        - application/json
      description: Get all business accounts a user is associated with
      parameters:
        - description: User ID
          in: path
          name: userID
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved business accounts
          schema:
            items:
              $ref: '#/definitions/placio-app_models.BusinessAccount'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Get all business accounts a user is associated with
      tags:
        - User
  /api/v1/users/business-account:
    post:
      consumes:
        - application/json
      description: Create a new business account for the authenticated user
      parameters:
        - description: Business Account Name
          in: body
          name: name
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created business account
          schema:
            $ref: '#/definitions/placio-app_models.BusinessAccount'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Create a new business account
      tags:
        - User
  /api/v1/users/business-account/{businessAccountID}/users:
    get:
      consumes:
        - application/json
      description: Get all users associated with a specific business account
      parameters:
        - description: Business Account ID
          in: path
          name: businessAccountID
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved users
          schema:
            items:
              $ref: '#/definitions/placio-app_models.User'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Get all users for a business account
      tags:
        - User
  /event/{eventId}:
    get:
      consumes:
        - application/json
      description: Get Event By ID
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/placio-app_models.Event'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event By ID
      tags:
        - Event
  /event/create:
    post:
      consumes:
        - application/json
      description: Create Event
      parameters:
        - description: Event Data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/placio-app_Dto.EventDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/placio-app_models.Event'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Create Event
      tags:
        - Event
  /event/delete/{eventId}:
    delete:
      consumes:
        - application/json
      description: Delete Event
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/placio-app_Dto.SuccessDTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Delete Event
      tags:
        - Event
  /event/get/category/{categoryId}:
    get:
      consumes:
        - application/json
      description: Get Event By Category
      parameters:
        - description: Category ID
          in: path
          name: categoryId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Event'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event By Category
      tags:
        - Event
  /event/get/date/{date}:
    get:
      consumes:
        - application/json
      description: Get Event By Date
      parameters:
        - description: Event Date
          in: path
          name: date
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Event'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event By Date
      tags:
        - Event
  /event/get/location/{locationId}:
    get:
      consumes:
        - application/json
      description: Get Event By Location
      parameters:
        - description: Location Address
          in: path
          name: address
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_models.Event'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event By Location
      tags:
        - Event
  /event/participants/{eventId}:
    get:
      consumes:
        - application/json
      description: Get Event Participants
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/placio-app_models.User'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Get Event Participants
      tags:
        - Event
  /event/update/{eventId}:
    put:
      consumes:
        - application/json
      description: Update Event
      parameters:
        - description: Event ID
          in: path
          name: eventId
          required: true
          type: string
        - description: Event Data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/placio-app_Dto.EventDto'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/placio-app_models.Event'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/placio-app_Dto.ErrorDTO'
      summary: Update Event
      tags:
        - Event
schemes:
  - http
  - https
swagger: '2.0'
