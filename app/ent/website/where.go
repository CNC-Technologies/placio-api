// Code generated by ent, DO NOT EDIT.

package website

import (
	"placio-app/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldID, id))
}

// DomainName applies equality check predicate on the "domainName" field. It's identical to DomainNameEQ.
func DomainName(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldDomainName, v))
}

// CreationDate applies equality check predicate on the "creationDate" field. It's identical to CreationDateEQ.
func CreationDate(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCreationDate, v))
}

// LastUpdated applies equality check predicate on the "lastUpdated" field. It's identical to LastUpdatedEQ.
func LastUpdated(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLastUpdated, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldTitle, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldDescription, v))
}

// Keywords applies equality check predicate on the "keywords" field. It's identical to KeywordsEQ.
func Keywords(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldKeywords, v))
}

// Language applies equality check predicate on the "language" field. It's identical to LanguageEQ.
func Language(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLanguage, v))
}

// Logo applies equality check predicate on the "logo" field. It's identical to LogoEQ.
func Logo(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLogo, v))
}

// Favicon applies equality check predicate on the "favicon" field. It's identical to FaviconEQ.
func Favicon(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldFavicon, v))
}

// Facebook applies equality check predicate on the "facebook" field. It's identical to FacebookEQ.
func Facebook(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldFacebook, v))
}

// Twitter applies equality check predicate on the "twitter" field. It's identical to TwitterEQ.
func Twitter(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldTwitter, v))
}

// Instagram applies equality check predicate on the "instagram" field. It's identical to InstagramEQ.
func Instagram(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldInstagram, v))
}

// Youtube applies equality check predicate on the "youtube" field. It's identical to YoutubeEQ.
func Youtube(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldYoutube, v))
}

// Linkedin applies equality check predicate on the "linkedin" field. It's identical to LinkedinEQ.
func Linkedin(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLinkedin, v))
}

// Pinterest applies equality check predicate on the "pinterest" field. It's identical to PinterestEQ.
func Pinterest(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldPinterest, v))
}

// Longitude applies equality check predicate on the "longitude" field. It's identical to LongitudeEQ.
func Longitude(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLongitude, v))
}

// Latitude applies equality check predicate on the "latitude" field. It's identical to LatitudeEQ.
func Latitude(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLatitude, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldAddress, v))
}

// City applies equality check predicate on the "city" field. It's identical to CityEQ.
func City(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCity, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldState, v))
}

// Country applies equality check predicate on the "country" field. It's identical to CountryEQ.
func Country(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCountry, v))
}

// ZipCode applies equality check predicate on the "zipCode" field. It's identical to ZipCodeEQ.
func ZipCode(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldZipCode, v))
}

// PhoneNumber applies equality check predicate on the "phoneNumber" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldPhoneNumber, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldEmail, v))
}

// DomainNameEQ applies the EQ predicate on the "domainName" field.
func DomainNameEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldDomainName, v))
}

// DomainNameNEQ applies the NEQ predicate on the "domainName" field.
func DomainNameNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldDomainName, v))
}

// DomainNameIn applies the In predicate on the "domainName" field.
func DomainNameIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldDomainName, vs...))
}

// DomainNameNotIn applies the NotIn predicate on the "domainName" field.
func DomainNameNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldDomainName, vs...))
}

// DomainNameGT applies the GT predicate on the "domainName" field.
func DomainNameGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldDomainName, v))
}

// DomainNameGTE applies the GTE predicate on the "domainName" field.
func DomainNameGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldDomainName, v))
}

// DomainNameLT applies the LT predicate on the "domainName" field.
func DomainNameLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldDomainName, v))
}

// DomainNameLTE applies the LTE predicate on the "domainName" field.
func DomainNameLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldDomainName, v))
}

// DomainNameContains applies the Contains predicate on the "domainName" field.
func DomainNameContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldDomainName, v))
}

// DomainNameHasPrefix applies the HasPrefix predicate on the "domainName" field.
func DomainNameHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldDomainName, v))
}

// DomainNameHasSuffix applies the HasSuffix predicate on the "domainName" field.
func DomainNameHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldDomainName, v))
}

// DomainNameEqualFold applies the EqualFold predicate on the "domainName" field.
func DomainNameEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldDomainName, v))
}

// DomainNameContainsFold applies the ContainsFold predicate on the "domainName" field.
func DomainNameContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldDomainName, v))
}

// CreationDateEQ applies the EQ predicate on the "creationDate" field.
func CreationDateEQ(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCreationDate, v))
}

// CreationDateNEQ applies the NEQ predicate on the "creationDate" field.
func CreationDateNEQ(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldCreationDate, v))
}

// CreationDateIn applies the In predicate on the "creationDate" field.
func CreationDateIn(vs ...time.Time) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldCreationDate, vs...))
}

// CreationDateNotIn applies the NotIn predicate on the "creationDate" field.
func CreationDateNotIn(vs ...time.Time) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldCreationDate, vs...))
}

// CreationDateGT applies the GT predicate on the "creationDate" field.
func CreationDateGT(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldCreationDate, v))
}

// CreationDateGTE applies the GTE predicate on the "creationDate" field.
func CreationDateGTE(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldCreationDate, v))
}

// CreationDateLT applies the LT predicate on the "creationDate" field.
func CreationDateLT(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldCreationDate, v))
}

// CreationDateLTE applies the LTE predicate on the "creationDate" field.
func CreationDateLTE(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldCreationDate, v))
}

// LastUpdatedEQ applies the EQ predicate on the "lastUpdated" field.
func LastUpdatedEQ(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLastUpdated, v))
}

// LastUpdatedNEQ applies the NEQ predicate on the "lastUpdated" field.
func LastUpdatedNEQ(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLastUpdated, v))
}

// LastUpdatedIn applies the In predicate on the "lastUpdated" field.
func LastUpdatedIn(vs ...time.Time) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLastUpdated, vs...))
}

// LastUpdatedNotIn applies the NotIn predicate on the "lastUpdated" field.
func LastUpdatedNotIn(vs ...time.Time) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLastUpdated, vs...))
}

// LastUpdatedGT applies the GT predicate on the "lastUpdated" field.
func LastUpdatedGT(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLastUpdated, v))
}

// LastUpdatedGTE applies the GTE predicate on the "lastUpdated" field.
func LastUpdatedGTE(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLastUpdated, v))
}

// LastUpdatedLT applies the LT predicate on the "lastUpdated" field.
func LastUpdatedLT(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLastUpdated, v))
}

// LastUpdatedLTE applies the LTE predicate on the "lastUpdated" field.
func LastUpdatedLTE(v time.Time) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLastUpdated, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldTitle, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldDescription, v))
}

// KeywordsEQ applies the EQ predicate on the "keywords" field.
func KeywordsEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldKeywords, v))
}

// KeywordsNEQ applies the NEQ predicate on the "keywords" field.
func KeywordsNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldKeywords, v))
}

// KeywordsIn applies the In predicate on the "keywords" field.
func KeywordsIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldKeywords, vs...))
}

// KeywordsNotIn applies the NotIn predicate on the "keywords" field.
func KeywordsNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldKeywords, vs...))
}

// KeywordsGT applies the GT predicate on the "keywords" field.
func KeywordsGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldKeywords, v))
}

// KeywordsGTE applies the GTE predicate on the "keywords" field.
func KeywordsGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldKeywords, v))
}

// KeywordsLT applies the LT predicate on the "keywords" field.
func KeywordsLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldKeywords, v))
}

// KeywordsLTE applies the LTE predicate on the "keywords" field.
func KeywordsLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldKeywords, v))
}

// KeywordsContains applies the Contains predicate on the "keywords" field.
func KeywordsContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldKeywords, v))
}

// KeywordsHasPrefix applies the HasPrefix predicate on the "keywords" field.
func KeywordsHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldKeywords, v))
}

// KeywordsHasSuffix applies the HasSuffix predicate on the "keywords" field.
func KeywordsHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldKeywords, v))
}

// KeywordsEqualFold applies the EqualFold predicate on the "keywords" field.
func KeywordsEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldKeywords, v))
}

// KeywordsContainsFold applies the ContainsFold predicate on the "keywords" field.
func KeywordsContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldKeywords, v))
}

// LanguageEQ applies the EQ predicate on the "language" field.
func LanguageEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLanguage, v))
}

// LanguageNEQ applies the NEQ predicate on the "language" field.
func LanguageNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLanguage, v))
}

// LanguageIn applies the In predicate on the "language" field.
func LanguageIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLanguage, vs...))
}

// LanguageNotIn applies the NotIn predicate on the "language" field.
func LanguageNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLanguage, vs...))
}

// LanguageGT applies the GT predicate on the "language" field.
func LanguageGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLanguage, v))
}

// LanguageGTE applies the GTE predicate on the "language" field.
func LanguageGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLanguage, v))
}

// LanguageLT applies the LT predicate on the "language" field.
func LanguageLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLanguage, v))
}

// LanguageLTE applies the LTE predicate on the "language" field.
func LanguageLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLanguage, v))
}

// LanguageContains applies the Contains predicate on the "language" field.
func LanguageContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldLanguage, v))
}

// LanguageHasPrefix applies the HasPrefix predicate on the "language" field.
func LanguageHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldLanguage, v))
}

// LanguageHasSuffix applies the HasSuffix predicate on the "language" field.
func LanguageHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldLanguage, v))
}

// LanguageEqualFold applies the EqualFold predicate on the "language" field.
func LanguageEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldLanguage, v))
}

// LanguageContainsFold applies the ContainsFold predicate on the "language" field.
func LanguageContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldLanguage, v))
}

// LogoEQ applies the EQ predicate on the "logo" field.
func LogoEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLogo, v))
}

// LogoNEQ applies the NEQ predicate on the "logo" field.
func LogoNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLogo, v))
}

// LogoIn applies the In predicate on the "logo" field.
func LogoIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLogo, vs...))
}

// LogoNotIn applies the NotIn predicate on the "logo" field.
func LogoNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLogo, vs...))
}

// LogoGT applies the GT predicate on the "logo" field.
func LogoGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLogo, v))
}

// LogoGTE applies the GTE predicate on the "logo" field.
func LogoGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLogo, v))
}

// LogoLT applies the LT predicate on the "logo" field.
func LogoLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLogo, v))
}

// LogoLTE applies the LTE predicate on the "logo" field.
func LogoLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLogo, v))
}

// LogoContains applies the Contains predicate on the "logo" field.
func LogoContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldLogo, v))
}

// LogoHasPrefix applies the HasPrefix predicate on the "logo" field.
func LogoHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldLogo, v))
}

// LogoHasSuffix applies the HasSuffix predicate on the "logo" field.
func LogoHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldLogo, v))
}

// LogoEqualFold applies the EqualFold predicate on the "logo" field.
func LogoEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldLogo, v))
}

// LogoContainsFold applies the ContainsFold predicate on the "logo" field.
func LogoContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldLogo, v))
}

// FaviconEQ applies the EQ predicate on the "favicon" field.
func FaviconEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldFavicon, v))
}

// FaviconNEQ applies the NEQ predicate on the "favicon" field.
func FaviconNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldFavicon, v))
}

// FaviconIn applies the In predicate on the "favicon" field.
func FaviconIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldFavicon, vs...))
}

// FaviconNotIn applies the NotIn predicate on the "favicon" field.
func FaviconNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldFavicon, vs...))
}

// FaviconGT applies the GT predicate on the "favicon" field.
func FaviconGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldFavicon, v))
}

// FaviconGTE applies the GTE predicate on the "favicon" field.
func FaviconGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldFavicon, v))
}

// FaviconLT applies the LT predicate on the "favicon" field.
func FaviconLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldFavicon, v))
}

// FaviconLTE applies the LTE predicate on the "favicon" field.
func FaviconLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldFavicon, v))
}

// FaviconContains applies the Contains predicate on the "favicon" field.
func FaviconContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldFavicon, v))
}

// FaviconHasPrefix applies the HasPrefix predicate on the "favicon" field.
func FaviconHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldFavicon, v))
}

// FaviconHasSuffix applies the HasSuffix predicate on the "favicon" field.
func FaviconHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldFavicon, v))
}

// FaviconEqualFold applies the EqualFold predicate on the "favicon" field.
func FaviconEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldFavicon, v))
}

// FaviconContainsFold applies the ContainsFold predicate on the "favicon" field.
func FaviconContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldFavicon, v))
}

// FacebookEQ applies the EQ predicate on the "facebook" field.
func FacebookEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldFacebook, v))
}

// FacebookNEQ applies the NEQ predicate on the "facebook" field.
func FacebookNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldFacebook, v))
}

// FacebookIn applies the In predicate on the "facebook" field.
func FacebookIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldFacebook, vs...))
}

// FacebookNotIn applies the NotIn predicate on the "facebook" field.
func FacebookNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldFacebook, vs...))
}

// FacebookGT applies the GT predicate on the "facebook" field.
func FacebookGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldFacebook, v))
}

// FacebookGTE applies the GTE predicate on the "facebook" field.
func FacebookGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldFacebook, v))
}

// FacebookLT applies the LT predicate on the "facebook" field.
func FacebookLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldFacebook, v))
}

// FacebookLTE applies the LTE predicate on the "facebook" field.
func FacebookLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldFacebook, v))
}

// FacebookContains applies the Contains predicate on the "facebook" field.
func FacebookContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldFacebook, v))
}

// FacebookHasPrefix applies the HasPrefix predicate on the "facebook" field.
func FacebookHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldFacebook, v))
}

// FacebookHasSuffix applies the HasSuffix predicate on the "facebook" field.
func FacebookHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldFacebook, v))
}

// FacebookEqualFold applies the EqualFold predicate on the "facebook" field.
func FacebookEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldFacebook, v))
}

// FacebookContainsFold applies the ContainsFold predicate on the "facebook" field.
func FacebookContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldFacebook, v))
}

// TwitterEQ applies the EQ predicate on the "twitter" field.
func TwitterEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldTwitter, v))
}

// TwitterNEQ applies the NEQ predicate on the "twitter" field.
func TwitterNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldTwitter, v))
}

// TwitterIn applies the In predicate on the "twitter" field.
func TwitterIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldTwitter, vs...))
}

// TwitterNotIn applies the NotIn predicate on the "twitter" field.
func TwitterNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldTwitter, vs...))
}

// TwitterGT applies the GT predicate on the "twitter" field.
func TwitterGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldTwitter, v))
}

// TwitterGTE applies the GTE predicate on the "twitter" field.
func TwitterGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldTwitter, v))
}

// TwitterLT applies the LT predicate on the "twitter" field.
func TwitterLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldTwitter, v))
}

// TwitterLTE applies the LTE predicate on the "twitter" field.
func TwitterLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldTwitter, v))
}

// TwitterContains applies the Contains predicate on the "twitter" field.
func TwitterContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldTwitter, v))
}

// TwitterHasPrefix applies the HasPrefix predicate on the "twitter" field.
func TwitterHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldTwitter, v))
}

// TwitterHasSuffix applies the HasSuffix predicate on the "twitter" field.
func TwitterHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldTwitter, v))
}

// TwitterEqualFold applies the EqualFold predicate on the "twitter" field.
func TwitterEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldTwitter, v))
}

// TwitterContainsFold applies the ContainsFold predicate on the "twitter" field.
func TwitterContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldTwitter, v))
}

// InstagramEQ applies the EQ predicate on the "instagram" field.
func InstagramEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldInstagram, v))
}

// InstagramNEQ applies the NEQ predicate on the "instagram" field.
func InstagramNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldInstagram, v))
}

// InstagramIn applies the In predicate on the "instagram" field.
func InstagramIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldInstagram, vs...))
}

// InstagramNotIn applies the NotIn predicate on the "instagram" field.
func InstagramNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldInstagram, vs...))
}

// InstagramGT applies the GT predicate on the "instagram" field.
func InstagramGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldInstagram, v))
}

// InstagramGTE applies the GTE predicate on the "instagram" field.
func InstagramGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldInstagram, v))
}

// InstagramLT applies the LT predicate on the "instagram" field.
func InstagramLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldInstagram, v))
}

// InstagramLTE applies the LTE predicate on the "instagram" field.
func InstagramLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldInstagram, v))
}

// InstagramContains applies the Contains predicate on the "instagram" field.
func InstagramContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldInstagram, v))
}

// InstagramHasPrefix applies the HasPrefix predicate on the "instagram" field.
func InstagramHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldInstagram, v))
}

// InstagramHasSuffix applies the HasSuffix predicate on the "instagram" field.
func InstagramHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldInstagram, v))
}

// InstagramEqualFold applies the EqualFold predicate on the "instagram" field.
func InstagramEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldInstagram, v))
}

// InstagramContainsFold applies the ContainsFold predicate on the "instagram" field.
func InstagramContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldInstagram, v))
}

// YoutubeEQ applies the EQ predicate on the "youtube" field.
func YoutubeEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldYoutube, v))
}

// YoutubeNEQ applies the NEQ predicate on the "youtube" field.
func YoutubeNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldYoutube, v))
}

// YoutubeIn applies the In predicate on the "youtube" field.
func YoutubeIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldYoutube, vs...))
}

// YoutubeNotIn applies the NotIn predicate on the "youtube" field.
func YoutubeNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldYoutube, vs...))
}

// YoutubeGT applies the GT predicate on the "youtube" field.
func YoutubeGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldYoutube, v))
}

// YoutubeGTE applies the GTE predicate on the "youtube" field.
func YoutubeGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldYoutube, v))
}

// YoutubeLT applies the LT predicate on the "youtube" field.
func YoutubeLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldYoutube, v))
}

// YoutubeLTE applies the LTE predicate on the "youtube" field.
func YoutubeLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldYoutube, v))
}

// YoutubeContains applies the Contains predicate on the "youtube" field.
func YoutubeContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldYoutube, v))
}

// YoutubeHasPrefix applies the HasPrefix predicate on the "youtube" field.
func YoutubeHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldYoutube, v))
}

// YoutubeHasSuffix applies the HasSuffix predicate on the "youtube" field.
func YoutubeHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldYoutube, v))
}

// YoutubeEqualFold applies the EqualFold predicate on the "youtube" field.
func YoutubeEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldYoutube, v))
}

// YoutubeContainsFold applies the ContainsFold predicate on the "youtube" field.
func YoutubeContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldYoutube, v))
}

// LinkedinEQ applies the EQ predicate on the "linkedin" field.
func LinkedinEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLinkedin, v))
}

// LinkedinNEQ applies the NEQ predicate on the "linkedin" field.
func LinkedinNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLinkedin, v))
}

// LinkedinIn applies the In predicate on the "linkedin" field.
func LinkedinIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLinkedin, vs...))
}

// LinkedinNotIn applies the NotIn predicate on the "linkedin" field.
func LinkedinNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLinkedin, vs...))
}

// LinkedinGT applies the GT predicate on the "linkedin" field.
func LinkedinGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLinkedin, v))
}

// LinkedinGTE applies the GTE predicate on the "linkedin" field.
func LinkedinGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLinkedin, v))
}

// LinkedinLT applies the LT predicate on the "linkedin" field.
func LinkedinLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLinkedin, v))
}

// LinkedinLTE applies the LTE predicate on the "linkedin" field.
func LinkedinLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLinkedin, v))
}

// LinkedinContains applies the Contains predicate on the "linkedin" field.
func LinkedinContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldLinkedin, v))
}

// LinkedinHasPrefix applies the HasPrefix predicate on the "linkedin" field.
func LinkedinHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldLinkedin, v))
}

// LinkedinHasSuffix applies the HasSuffix predicate on the "linkedin" field.
func LinkedinHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldLinkedin, v))
}

// LinkedinEqualFold applies the EqualFold predicate on the "linkedin" field.
func LinkedinEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldLinkedin, v))
}

// LinkedinContainsFold applies the ContainsFold predicate on the "linkedin" field.
func LinkedinContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldLinkedin, v))
}

// PinterestEQ applies the EQ predicate on the "pinterest" field.
func PinterestEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldPinterest, v))
}

// PinterestNEQ applies the NEQ predicate on the "pinterest" field.
func PinterestNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldPinterest, v))
}

// PinterestIn applies the In predicate on the "pinterest" field.
func PinterestIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldPinterest, vs...))
}

// PinterestNotIn applies the NotIn predicate on the "pinterest" field.
func PinterestNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldPinterest, vs...))
}

// PinterestGT applies the GT predicate on the "pinterest" field.
func PinterestGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldPinterest, v))
}

// PinterestGTE applies the GTE predicate on the "pinterest" field.
func PinterestGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldPinterest, v))
}

// PinterestLT applies the LT predicate on the "pinterest" field.
func PinterestLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldPinterest, v))
}

// PinterestLTE applies the LTE predicate on the "pinterest" field.
func PinterestLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldPinterest, v))
}

// PinterestContains applies the Contains predicate on the "pinterest" field.
func PinterestContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldPinterest, v))
}

// PinterestHasPrefix applies the HasPrefix predicate on the "pinterest" field.
func PinterestHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldPinterest, v))
}

// PinterestHasSuffix applies the HasSuffix predicate on the "pinterest" field.
func PinterestHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldPinterest, v))
}

// PinterestEqualFold applies the EqualFold predicate on the "pinterest" field.
func PinterestEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldPinterest, v))
}

// PinterestContainsFold applies the ContainsFold predicate on the "pinterest" field.
func PinterestContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldPinterest, v))
}

// LongitudeEQ applies the EQ predicate on the "longitude" field.
func LongitudeEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLongitude, v))
}

// LongitudeNEQ applies the NEQ predicate on the "longitude" field.
func LongitudeNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLongitude, v))
}

// LongitudeIn applies the In predicate on the "longitude" field.
func LongitudeIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLongitude, vs...))
}

// LongitudeNotIn applies the NotIn predicate on the "longitude" field.
func LongitudeNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLongitude, vs...))
}

// LongitudeGT applies the GT predicate on the "longitude" field.
func LongitudeGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLongitude, v))
}

// LongitudeGTE applies the GTE predicate on the "longitude" field.
func LongitudeGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLongitude, v))
}

// LongitudeLT applies the LT predicate on the "longitude" field.
func LongitudeLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLongitude, v))
}

// LongitudeLTE applies the LTE predicate on the "longitude" field.
func LongitudeLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLongitude, v))
}

// LongitudeContains applies the Contains predicate on the "longitude" field.
func LongitudeContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldLongitude, v))
}

// LongitudeHasPrefix applies the HasPrefix predicate on the "longitude" field.
func LongitudeHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldLongitude, v))
}

// LongitudeHasSuffix applies the HasSuffix predicate on the "longitude" field.
func LongitudeHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldLongitude, v))
}

// LongitudeEqualFold applies the EqualFold predicate on the "longitude" field.
func LongitudeEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldLongitude, v))
}

// LongitudeContainsFold applies the ContainsFold predicate on the "longitude" field.
func LongitudeContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldLongitude, v))
}

// LatitudeEQ applies the EQ predicate on the "latitude" field.
func LatitudeEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldLatitude, v))
}

// LatitudeNEQ applies the NEQ predicate on the "latitude" field.
func LatitudeNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldLatitude, v))
}

// LatitudeIn applies the In predicate on the "latitude" field.
func LatitudeIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldLatitude, vs...))
}

// LatitudeNotIn applies the NotIn predicate on the "latitude" field.
func LatitudeNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldLatitude, vs...))
}

// LatitudeGT applies the GT predicate on the "latitude" field.
func LatitudeGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldLatitude, v))
}

// LatitudeGTE applies the GTE predicate on the "latitude" field.
func LatitudeGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldLatitude, v))
}

// LatitudeLT applies the LT predicate on the "latitude" field.
func LatitudeLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldLatitude, v))
}

// LatitudeLTE applies the LTE predicate on the "latitude" field.
func LatitudeLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldLatitude, v))
}

// LatitudeContains applies the Contains predicate on the "latitude" field.
func LatitudeContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldLatitude, v))
}

// LatitudeHasPrefix applies the HasPrefix predicate on the "latitude" field.
func LatitudeHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldLatitude, v))
}

// LatitudeHasSuffix applies the HasSuffix predicate on the "latitude" field.
func LatitudeHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldLatitude, v))
}

// LatitudeEqualFold applies the EqualFold predicate on the "latitude" field.
func LatitudeEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldLatitude, v))
}

// LatitudeContainsFold applies the ContainsFold predicate on the "latitude" field.
func LatitudeContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldLatitude, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldAddress, v))
}

// CityEQ applies the EQ predicate on the "city" field.
func CityEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCity, v))
}

// CityNEQ applies the NEQ predicate on the "city" field.
func CityNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldCity, v))
}

// CityIn applies the In predicate on the "city" field.
func CityIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldCity, vs...))
}

// CityNotIn applies the NotIn predicate on the "city" field.
func CityNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldCity, vs...))
}

// CityGT applies the GT predicate on the "city" field.
func CityGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldCity, v))
}

// CityGTE applies the GTE predicate on the "city" field.
func CityGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldCity, v))
}

// CityLT applies the LT predicate on the "city" field.
func CityLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldCity, v))
}

// CityLTE applies the LTE predicate on the "city" field.
func CityLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldCity, v))
}

// CityContains applies the Contains predicate on the "city" field.
func CityContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldCity, v))
}

// CityHasPrefix applies the HasPrefix predicate on the "city" field.
func CityHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldCity, v))
}

// CityHasSuffix applies the HasSuffix predicate on the "city" field.
func CityHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldCity, v))
}

// CityEqualFold applies the EqualFold predicate on the "city" field.
func CityEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldCity, v))
}

// CityContainsFold applies the ContainsFold predicate on the "city" field.
func CityContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldCity, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldState, v))
}

// StateContains applies the Contains predicate on the "state" field.
func StateContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldState, v))
}

// StateHasPrefix applies the HasPrefix predicate on the "state" field.
func StateHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldState, v))
}

// StateHasSuffix applies the HasSuffix predicate on the "state" field.
func StateHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldState, v))
}

// StateEqualFold applies the EqualFold predicate on the "state" field.
func StateEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldState, v))
}

// StateContainsFold applies the ContainsFold predicate on the "state" field.
func StateContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldState, v))
}

// CountryEQ applies the EQ predicate on the "country" field.
func CountryEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldCountry, v))
}

// CountryNEQ applies the NEQ predicate on the "country" field.
func CountryNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldCountry, v))
}

// CountryIn applies the In predicate on the "country" field.
func CountryIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldCountry, vs...))
}

// CountryNotIn applies the NotIn predicate on the "country" field.
func CountryNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldCountry, vs...))
}

// CountryGT applies the GT predicate on the "country" field.
func CountryGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldCountry, v))
}

// CountryGTE applies the GTE predicate on the "country" field.
func CountryGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldCountry, v))
}

// CountryLT applies the LT predicate on the "country" field.
func CountryLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldCountry, v))
}

// CountryLTE applies the LTE predicate on the "country" field.
func CountryLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldCountry, v))
}

// CountryContains applies the Contains predicate on the "country" field.
func CountryContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldCountry, v))
}

// CountryHasPrefix applies the HasPrefix predicate on the "country" field.
func CountryHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldCountry, v))
}

// CountryHasSuffix applies the HasSuffix predicate on the "country" field.
func CountryHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldCountry, v))
}

// CountryEqualFold applies the EqualFold predicate on the "country" field.
func CountryEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldCountry, v))
}

// CountryContainsFold applies the ContainsFold predicate on the "country" field.
func CountryContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldCountry, v))
}

// ZipCodeEQ applies the EQ predicate on the "zipCode" field.
func ZipCodeEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldZipCode, v))
}

// ZipCodeNEQ applies the NEQ predicate on the "zipCode" field.
func ZipCodeNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldZipCode, v))
}

// ZipCodeIn applies the In predicate on the "zipCode" field.
func ZipCodeIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldZipCode, vs...))
}

// ZipCodeNotIn applies the NotIn predicate on the "zipCode" field.
func ZipCodeNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldZipCode, vs...))
}

// ZipCodeGT applies the GT predicate on the "zipCode" field.
func ZipCodeGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldZipCode, v))
}

// ZipCodeGTE applies the GTE predicate on the "zipCode" field.
func ZipCodeGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldZipCode, v))
}

// ZipCodeLT applies the LT predicate on the "zipCode" field.
func ZipCodeLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldZipCode, v))
}

// ZipCodeLTE applies the LTE predicate on the "zipCode" field.
func ZipCodeLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldZipCode, v))
}

// ZipCodeContains applies the Contains predicate on the "zipCode" field.
func ZipCodeContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldZipCode, v))
}

// ZipCodeHasPrefix applies the HasPrefix predicate on the "zipCode" field.
func ZipCodeHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldZipCode, v))
}

// ZipCodeHasSuffix applies the HasSuffix predicate on the "zipCode" field.
func ZipCodeHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldZipCode, v))
}

// ZipCodeEqualFold applies the EqualFold predicate on the "zipCode" field.
func ZipCodeEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldZipCode, v))
}

// ZipCodeContainsFold applies the ContainsFold predicate on the "zipCode" field.
func ZipCodeContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldZipCode, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phoneNumber" field.
func PhoneNumberEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phoneNumber" field.
func PhoneNumberNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phoneNumber" field.
func PhoneNumberIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phoneNumber" field.
func PhoneNumberNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phoneNumber" field.
func PhoneNumberGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phoneNumber" field.
func PhoneNumberGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phoneNumber" field.
func PhoneNumberLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phoneNumber" field.
func PhoneNumberLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phoneNumber" field.
func PhoneNumberContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phoneNumber" field.
func PhoneNumberHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phoneNumber" field.
func PhoneNumberHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phoneNumber" field.
func PhoneNumberEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phoneNumber" field.
func PhoneNumberContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.Website {
	return predicate.Website(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.Website {
	return predicate.Website(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.Website {
	return predicate.Website(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.Website {
	return predicate.Website(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.Website {
	return predicate.Website(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.Website {
	return predicate.Website(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.Website {
	return predicate.Website(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.Website {
	return predicate.Website(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.Website {
	return predicate.Website(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.Website {
	return predicate.Website(sql.FieldContainsFold(FieldEmail, v))
}

// HasBusiness applies the HasEdge predicate on the "business" edge.
func HasBusiness() predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, BusinessTable, BusinessColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBusinessWith applies the HasEdge predicate on the "business" edge with a given conditions (other predicates).
func HasBusinessWith(preds ...predicate.Business) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := newBusinessStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasTemplate applies the HasEdge predicate on the "template" edge.
func HasTemplate() predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, TemplateTable, TemplateColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTemplateWith applies the HasEdge predicate on the "template" edge with a given conditions (other predicates).
func HasTemplateWith(preds ...predicate.Template) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := newTemplateStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCustomBlocks applies the HasEdge predicate on the "customBlocks" edge.
func HasCustomBlocks() predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, CustomBlocksTable, CustomBlocksColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCustomBlocksWith applies the HasEdge predicate on the "customBlocks" edge with a given conditions (other predicates).
func HasCustomBlocksWith(preds ...predicate.CustomBlock) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := newCustomBlocksStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasAssets applies the HasEdge predicate on the "assets" edge.
func HasAssets() predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, AssetsTable, AssetsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAssetsWith applies the HasEdge predicate on the "assets" edge with a given conditions (other predicates).
func HasAssetsWith(preds ...predicate.Media) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		step := newAssetsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Website) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Website) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Website) predicate.Website {
	return predicate.Website(func(s *sql.Selector) {
		p(s.Not())
	})
}
