version: "3.8"
volumes:
  db_data:
  pgadmin_data:
  mongo_data:
  redis_data:
  es_data:

services:
  db:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: dozie
      POSTGRES_PASSWORD: 918273645dozie
      POSTGRES_DB: placio
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U dozie" ]
#      interval: 30s
#      timeout: 30s
#      retries: 3

  #  unleash:
  #    image: unleashorg/unleash-server:latest
  #    ports:
  #      - "4242:4242"
  #    environment:
  #      # This points Unleash to its backing database (defined in the `db` section below)
  #      DATABASE_URL: "postgres://dozie:918273645dozie@postgres-db/postgres"
  #      DATABASE_SSL: "false"
  #      LOG_LEVEL: "warn"
  #      # Proxy clients must use one of these keys to connect to the
  #      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
  #      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
  #      # Initialize Unleash with a default set of client API tokens. To
  #      # initialize Unleash with multiple tokens, separate them with a
  #      # comma (`token1,token2`).
  #      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
  ##    depends_on:
  ##      db:
  ##        condition: service_healthy
  #    command: [ "node", "index.js" ]
  ##    healthcheck:
  ##      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
  ##      interval: 1s
  ##      timeout: 1m
  ##      retries: 5
  app:
    #    container_name: placio-app
    # platform: linux/x86_64
    build:
      context: .
#      dockerfile: ./cmd/app/Dockerfile
      dockerfile: ./cmd/app/Dockerfile
    restart: always
    ports:
      - "7070:7070"
    depends_on:
      - db
    volumes:
      - ./:/app
      - ./cmd/app:/app/cmd/app
      - ./config:/app/config
    env_file:
      - ./.envs/.local

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
#      - http.cors.enabled=true
#      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
#      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
#      - http.cors.allow-credentials=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
#
#  dejavu:
#    image: appbaseio/dejavu
#    ports:
#      - "1358:1358"

  kibana:
    image: kibana:8.8.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_PROTOCOL=http
    depends_on:
      - elasticsearch

