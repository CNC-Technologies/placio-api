version: "3.8"

services:
  placio-backend:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    restart: always
    ports:
      - "7070:7070"
      - "50051:50051"
    volumes:
      # - ./:/app
      - ./app:/app/app
      - ./pkg:/app/pkg
      - ./config:/app/config
      - ./app/domains/media/serviceAccount.json:/app/serviceAccount.json
    env_file:
      - .envs/.local

  askai:
    ports:
      - "8282:8282"
    env_file:
      - ./askai/.env
    restart: always
    build:
      context: ./askai
      dockerfile: ./Dockerfile
    #    entrypoint: >
    #      sh -c "sleep 5 && python /askai/askai/main.py"
    networks:
      - default

  doziestar:
    image: doziestar
    build:
      context: .
      dockerfile: ./dozie/Dockerfile
    ports:
      - 5000:5000

  africa_insight:
    build:
      context: ./africa_insight
      dockerfile: ./docker/Dockerfile.local
      args:
        DB_CONNECTION: "postgresql://postgres:918273645dozie@db:5432/postgres"
        MODE: "TEST"
    # entrypoint: >
    #   sh -c "sleep 5 && python ./africa_insight/main.py"
    volumes:
      - ./africa_insight:/app/
    environment:
      - PYTHONPATH=/app/africa_insight
      - DEBUG=True
    ports:
      - "8383:8383"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8383/api/v1/version"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  ws:
    build:
      context: .
      dockerfile: ./realtime_server/Dockerfile
    restart: always
    depends_on:
      - placio-backend
    ports:
      - "7080:7080"
    volumes:
      # - ./:/app
      - ./realtime_server:/work/realtime_server
      - ./pkg:/work/pkg
      # - ./config:/app/config
    env_file:
      - .envs/.local
