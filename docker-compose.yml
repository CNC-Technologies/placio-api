version: "3.8"

services:
  #  unleash:
  #    image: unleashorg/unleash-server:latest
  #    ports:
  #      - "4242:4242"
  #    environment:
  #      # This points Unleash to its backing db (defined in the `db` section below)
  #      DATABASE_URL: "postgres://dozie:918273645dozie@postgres-db/postgres"
  #      DATABASE_SSL: "false"
  #      LOG_LEVEL: "warn"
  #      # Proxy clients must use one of these keys to connect to the
  #      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
  #      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
  #      # Initialize Unleash with a default set of client API tokens. To
  #      # initialize Unleash with multiple tokens, separate them with a
  #      # comma (`token1,token2`).
  #      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
  ##    depends_on:
  ##      db:
  ##        condition: service_healthy
  #    command: [ "node", "index.js" ]
  ##    healthcheck:
  ##      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
  ##      interval: 1s
  ##      timeout: 1m
  ##      retries: 5
  placio-backend:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    restart: always
    ports:
      - "7070:7070"
      - "50051:50051"
    volumes:
      # - ./:/app
      - ./app:/app/app
      - ./pkg:/app/pkg
      - ./config:/app/config
    env_file:
      - .envs/.local

  askai:
    ports:
      - "8282:8282"
    env_file:
      - ./askai/.env
    restart: always
    build:
      context: .
      dockerfile: ./askai/Dockerfile
    entrypoint: >
      sh -c "sleep 5 && python ./askai/askai/main.py"
    networks:
      - default

  ws:
    build:
      context: .
      dockerfile: ./realtime_server/Dockerfile
    restart: always
    depends_on:
      - placio-backend
    ports:
      - "7080:7080"
    volumes:
      # - ./:/app
      - ./realtime_server:/work/realtime_server
      - ./pkg:/work/pkg
      # - ./config:/app/config
    env_file:
      - .envs/.local
