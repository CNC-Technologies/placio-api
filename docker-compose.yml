version: "3.8"
volumes:
  db_data:
  pgadmin_data:
  mongo_data:
  redis_data:
  data01:
  data02:
  data03:


services:

  db:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: dozie
      POSTGRES_PASSWORD: 918273645dozie
      POSTGRES_DB: placio
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

#  unleash:
#    image: unleashorg/unleash-server:latest
#    ports:
#      - "4242:4242"
#    environment:
#      # This points Unleash to its backing database (defined in the `db` section below)
#      DATABASE_URL: "postgres://dozie:918273645dozie@postgres-db/postgres"
#      DATABASE_SSL: "false"
#      LOG_LEVEL: "warn"
#      # Proxy clients must use one of these keys to connect to the
#      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
#      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
#      # Initialize Unleash with a default set of client API tokens. To
#      # initialize Unleash with multiple tokens, separate them with a
#      # comma (`token1,token2`).
#      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
##    depends_on:
##      db:
##        condition: service_healthy
#    command: [ "node", "index.js" ]
##    healthcheck:
##      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
##      interval: 1s
##      timeout: 1m
##      retries: 5
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.0
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  broker:
#    image: confluentinc/cp-kafka:7.0.0
#    container_name: broker
#    ports:
#      # To learn about configuring Kafka for access across networks see
#      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  app:
    #    container_name: placio-app
    # platform: linux/x86_64
    build:
      context: .
      dockerfile: ./cmd/app/Dockerfile
    restart: always
    ports:
      - "7070:7070"
    #    depends_on:
    #      - postgres-db
    volumes:
      - ./:/app
      - ./cmd/app:/app/cmd/app
      - ./config:/app/config
    env_file:
      - ./.envs/.local

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
#    networks:
#      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
#    networks:
#      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
#    networks:
#      - elastic
